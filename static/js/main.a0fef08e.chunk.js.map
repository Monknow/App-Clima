{"version":3,"sources":["customHooks/traerDatos.js","customHooks/useFetchClimaPorCoords.js","customHooks/useFetchClimaCiudadesPorNombre.js","AppClima/Contenido/CuerpoDatos/DatosPrincipales/DatosBasicos/DatosBasicos.js","customHooks/useConvertirUnidadTemperatura.js","AppClima/Varios/Temperatura.js","customHooks/useTraerNombrePorCodigoPais.js","AppClima/Contenido/CuerpoDatos/DatosPrincipales/DatosPrincipales.js","AppClima/Contenido/CuerpoDatos/PronosticoSemana/DiaDeSemana/DiaDeSemana.js","AppClima/Contenido/CuerpoDatos/PronosticoSemana/PronosticoSemana.js","AppClima/Contenido/CuerpoDatos/GraficaDia/BotonGraficaDia/BotonGraficaDia.js","AppClima/Contenido/CuerpoDatos/GraficaDia/GraficaDia.js","AppClima/Contenido/CuerpoDatos/UnidadTemperatura/UnidadTemperatura.js","AppClima/Varios/Cargando/Cargando.js","AppClima/Contenido/CuerpoDatos/CuerpoDatos.js","AppClima/Contenido/CiudadesBuscadas/Ciudad/Ciudad.js","AppClima/Contenido/CiudadesBuscadas/CiudadesBuscadas.js","AppClima/Contenido/Contenido.js","AppClima/Estatico/NavBar/logo-app-clima.png","AppClima/Estatico/NavBar/NavBar.js","AppClima/Estatico/Header/Header.js","AppClima/Buscador/BotonBusqueda/BotonBusqueda.js","AppClima/Buscador/InputCiudad/InputCiudad.js","AppClima/Buscador/Buscador.js","AppClima/AppClima.js","reportWebVitals.js","index.js"],"names":["traerDatos","url","a","axios","get","then","res","catch","err","console","error","response","useFetchClimaPorCoords","coords","coordsCargando","useState","datos","setDatos","cargando","setCargando","useEffect","montarDatos","urlDatosLugarBuscado","lat","lon","data","useFetchClimaCiudadesPorNombre","lugarBuscado","lugarCargando","mensajeResultado","setMensajeResultado","componenteMontado","urlLugarBuscado","resultadoLimpio","JSON","parse","replace","count","status","DatosBasicos","props","className","current","humidity","Math","round","pressure","wind_speed","useConvertirUnidadTemperatura","valorTemperatura","unidadActual","unidadResultado","valor","setValor","unidad","setUnidad","Temperatura","temperaturaValor","unidadConvertida","unidadTemperatura","CustomTag","etiqueta","useTraerNombrePorCodigoPais","codigoPais","nombre","setNombre","tablaDeConversion","Map","DatosPrincipales","datosNombreLugar","fecha","Date","dt","timezone_offset","minutos","getUTCMinutes","hora","getUTCHours","pais","sys","country","name","getUTCDay","temp","daily","min","max","weather","description","src","icon","alt","DiaDeSemana","temperaturaMin","temperaturaMax","icono","descripcion","getUTCDate","getUTCMonth","PronosticoSemana","keyID","map","dia","BotonGraficaDia","activo","setActivo","datosGraficos","propiedad","dataKey","fill","stroke","unit","propiedadActiva","onClick","colocarGraficoEnPantalla","GraficaDia","graficoEnPantalla","setGraficoEnPantalla","datosDia","slice","forEach","tiempoEnHoras","zonaHoraria","push","Humedad","Viento","Hora","datosGrafico","ResponsiveContainer","width","height","AreaChart","Area","type","fillOpacity","XAxis","tick","tickLine","axisLine","Tooltip","itemStyle","color","fontSize","fontWeight","labelStyle","UnidadTemperatura","botonNegritasC","botonNegritasF","levantarUnidadTemperatura","Cargando","CuerpoDatos","setUnidadTemperatura","datosNombre","unidadLevantada","hourly","Ciudad","temperatura","floor","main","tabIndex","levantarDatosCiudad","coord","onKeyPress","evento","key","CiudadesBuscadas","ciudadesFiltradas","setCiudadesFiltradas","ciudadesFiltradasCargadas","setCiudadesFiltradasCargadas","ciudades","resultadoDeFiltrarCiudades","setsDeCoordenadas","list","ciudad","index","coordenadasSimplificadas","ciudadesSinDuplicadosFiltrados","setDeCoordenadas","array","indexOf","filter","filtrarCiudades","datosCiudad","indexMap","Contenido","climaCiudadesPorNombre","climaPorCoords","coordsCiudadCargando","NavBar","logo","Header","BotonBusqueda","InputCiudad","placeholder","onChange","event","levantarInput","target","value","Buscador","onSubmit","preventDefault","levantarBusqueda","lugarEnBusqueda","AppClima","setLugarEnBusqueda","setLugarBuscado","setLugarCargando","setDatosCiudad","coordsCiudad","setCoordsCiudad","setCoordsCiudadCargando","resultadoClimaCiudadesPorNombre","resultadoClimaPorCoords","mensajeDeCarga","valorInput","datosCiudadLevantados","coordsCiudadLevantados","coordsCiudadCargandoLevantados","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0fef08e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst traerDatos = async (url) => {\r\n    return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n            return err.response;\r\n        });\r\n};\r\n\r\nexport default traerDatos;","import {useState, useEffect} from \"react\";\r\nimport traerDatos from \"./traerDatos\";\r\n\r\n\r\nfunction useFetchClimaPorCoords (coords, coordsCargando) {\r\n    \r\n    const [datos, setDatos] = useState(null);\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(coordsCargando === false) {\r\n            const montarDatos = async () => {\r\n                \r\n                const urlDatosLugarBuscado = `https://api.openweathermap.org/data/2.5/onecall?lat=${coords.lat}&lon=${coords.lon}&lang=es&exclude=minutely,alerts&units=metric&appid=cfdf46ac4ccb5e3a4775488af2e57ce0`;\r\n    \r\n    \r\n                await traerDatos(urlDatosLugarBuscado)\r\n                .then((res) =>{\r\n                    setDatos(res.data);\r\n                    setCargando(false);\r\n                });\r\n            }\r\n        \r\n            setCargando(true);\r\n            montarDatos();\r\n        }  \r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [coordsCargando]);\r\n\r\n\r\n    return {datos, cargando}\r\n}\r\n\r\nexport default useFetchClimaPorCoords;","import {useState, useEffect} from \"react\";\r\nimport traerDatos from \"./traerDatos\";\r\n\r\nfunction useFetchClimaCiudadesPorNombre (lugarBuscado,lugarCargando) {\r\n    const [datos, setDatos] = useState(null);\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n    const [mensajeResultado, setMensajeResultado] = useState(\"¡Busque el clima de cualquier ciudad!\");\r\n\r\n    useEffect(() =>{\r\n        let componenteMontado = true;\r\n\r\n        if(lugarCargando === false && lugarBuscado !== null && componenteMontado === true){\r\n            const montarDatos = async () => {\r\n\r\n                const urlLugarBuscado = `https://openweathermap.org/data/2.5/find?callback=?&q=${lugarBuscado}&lang=es&units=metric&&type=like&sort=population&cnt=30&appid=439d4b804bc8187953eb36d2a8c26a02`\r\n    \r\n                setCargando(true);\r\n                setMensajeResultado(\"Cargando\");\r\n\r\n                await traerDatos(urlLugarBuscado)\r\n                .then((res) =>{\r\n                \r\n                        try{\r\n                            const resultadoLimpio = JSON.parse(res.data.replace(/[\\\\?()]/g, \"\"));\r\n\r\n                            switch (true) {\r\n                                case resultadoLimpio.count === 0:\r\n                                    setCargando(true);\r\n                                    setMensajeResultado(\"Ciudad no encontrada. Revise su busqueda \");\r\n                                    break;\r\n                                case res.status === 200:\r\n                                        setDatos(resultadoLimpio);\r\n                                        setCargando(false);\r\n                                        setMensajeResultado(\"Cargando\");\r\n                                    break;\r\n                                case res.status >= 500:\r\n                                    setCargando(true);\r\n                                    setMensajeResultado(\"Ha ocurrido un error en el servidor, Intenté más tarde por favor\");\r\n                                    break;\r\n                                default:\r\n                                    setCargando(true);\r\n                                    setMensajeResultado(\"Ha ocurrido un error desconocido. Intenté más tarde por favor\");\r\n                                    break;\r\n                            }\r\n                        } catch{\r\n                            setCargando(true);\r\n                            setMensajeResultado(\"Ha ocurrido un error desconocido. Intenté más tarde por favor\");\r\n                        }\r\n                });\r\n                \r\n            }\r\n            montarDatos();\r\n        }\r\n\r\n        return function cleanUp(){\r\n            componenteMontado = false;\r\n        }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [lugarCargando])\r\n\r\n    return {datos, cargando, mensajeResultado}\r\n}\r\n\r\nexport default useFetchClimaCiudadesPorNombre;","import \"./DatosBasicos.css\";\r\n\r\nfunction DatosBasicos(props) {\r\n\r\n    const datos = props.datos;\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"datos-basicos\">\r\n                <li>Humedad a {`${datos.current.humidity}%`}</li>\r\n                <li>Presión a {`${Math.round(datos.current.pressure * 0.0145 * 100) / 100} PSI`}</li> \r\n                {/*La presión es convertida de hectopascales a PSI y es redondeada a dos decimales*/}\r\n                <li>Viento a {`${datos.current.wind_speed} m/s`}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default DatosBasicos;\r\n","import {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction useConvertirUnidadTemperatura(valorTemperatura, unidadActual, unidadResultado) {\r\n\r\n    const [valor, setValor] = useState(valorTemperatura);\r\n    const [unidad, setUnidad] = useState(\"C\");\r\n\r\n    useEffect(()=>{\r\n        if(unidadActual === \"C\" && unidadResultado === \"F\"){\r\n            setValor((valorTemperatura * 9/5) + 32);\r\n            setUnidad(\"F\");\r\n        }\r\n        else if(unidadActual === \"F\" && unidadResultado === \"C\"){\r\n            setValor((valorTemperatura - 32) * 5/9);\r\n            setUnidad(\"C\");\r\n        }\r\n    \r\n        // eslint-disable-next-line\r\n    }, [unidadResultado]);\r\n    \r\n\r\n\r\n\r\n    return {valor, unidad}\r\n}\r\n\r\nexport default useConvertirUnidadTemperatura;","import {useState, useEffect} from \"react\";\r\nimport useConvertirUnidadTemperatura from \"./../../customHooks/useConvertirUnidadTemperatura\";\r\n\r\n\r\nfunction Temperatura(props){\r\n    const [valor, setValor] = useState(props.temperaturaValor);\r\n    const [unidad, setUnidad] = useState(\"C\");\r\n\r\n    const unidadConvertida = useConvertirUnidadTemperatura(valor, unidad, props.unidadTemperatura);\r\n    const CustomTag = props.etiqueta;\r\n\r\n    useEffect(()=>{\r\n        setValor(unidadConvertida.valor);\r\n        setUnidad(unidadConvertida.unidad);\r\n\r\n    // eslint-disable-next-line\r\n    }, [unidadConvertida]);\r\n\r\n\r\n    return(\r\n        <CustomTag>\r\n           {` ${Math.round(valor * 100) / 100} `} \r\n        </CustomTag>\r\n    );\r\n};\r\n\r\nexport default Temperatura;","import {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction useTraerNombrePorCodigoPais(codigoPais) {\r\n    const [nombre, setNombre] = useState(null);\r\n\r\n    const tablaDeConversion = new Map([[\"AD\", \"Andorra\"],[\"AE\", \"Emiratos Árabes Unidos\"],[\"AF\", \"Afganistán\"],[\"AG\", \"Antigua y Barbuda\"],[\"AI\", \"Anguila\"],[\"AL\", \"Albania\"],[\"AM\", \"Armenia\"],[\"AN\", \"Antillas Neerlandesas\"],[\"AO\", \"Angola\"],[\"AQ\", \"Antártida\"],[\"AR\", \"Argentina\"],[\"AS\", \"Samoa Americana\"],[\"AT\", \"Austria\"],[\"AU\", \"Australia\"],[\"AW\", \"Aruba\"],[\"AX\", \"Islas Áland\"],[\"AZ\", \"Azerbaiyán\"],[\"BA\", \"Bosnia y Herzegovina\"],[\"BB\", \"Barbados\"],[\"BD\", \"Bangladesh\"],[\"BE\", \"Bélgica\"],[\"BF\", \"Burkina Faso\"],[\"BG\", \"Bulgaria\"],[\"BH\", \"Bahréin\"],[\"BI\", \"Burundi\"],[\"BJ\", \"Benin\"],[\"BL\", \"San Bartolomé\"],[\"BM\", \"Bermudas\"],[\"BN\", \"Brunéi\"],[\"BO\", \"Bolivia\"],[\"BR\", \"Brasil\"],[\"BS\", \"Bahamas\"],[\"BT\", \"Bhután\"],[\"BV\", \"Isla Bouvet\"],[\"BW\", \"Botsuana\"],[\"BY\", \"Belarús\"],[\"BZ\", \"Belice\"],[\"CA\", \"Canadá\"],[\"CC\", \"Islas Cocos\"],[\"CF\", \"República Centro-Africana\"],[\"CG\", \"Congo\"],[\"CH\", \"Suiza\"],[\"CI\", \"Costa de Marfil\"],[\"CK\", \"Islas Cook\"],[\"CL\", \"Chile\"],[\"CM\", \"Camerún\"],[\"CN\", \"China\"],[\"CO\", \"Colombia\"],[\"CR\", \"Costa Rica\"],[\"CU\", \"Cuba\"],[\"CV\", \"Cabo Verde\"],[\"CX\", \"Islas Christmas\"],[\"CY\", \"Chipre\"],[\"CZ\", \"República Checa\"],[\"DE\", \"Alemania\"],[\"DJ\", \"Yibuti\"],[\"DK\", \"Dinamarca\"],[\"DM\", \"Domínica\"],[\"DO\", \"República Dominicana\"],[\"DZ\", \"Argel\"],[\"EC\", \"Ecuador\"],[\"EE\", \"Estonia\"],[\"EG\", \"Egipto\"],[\"EH\", \"Sahara Occidental\"],[\"ER\", \"Eritrea\"],[\"ES\", \"España\"],[\"ET\", \"Etiopía\"],[\"FI\", \"Finlandia\"],[\"FJ\", \"Fiji\"],[\"FK\", \"Islas Malvinas\"],[\"FM\", \"Micronesia\"],[\"FO\", \"Islas Faroe\"],[\"FR\", \"Francia\"],[\"GA\", \"Gabón\"],[\"GB\", \"Reino Unido\"],[\"GD\", \"Granada\"],[\"GE\", \"Georgia\"],[\"GF\", \"Guayana Francesa\"],[\"GG\", \"Guernsey\"],[\"GH\", \"Ghana\"],[\"GI\", \"Gibraltar\"],[\"GL\", \"Groenlandia\"],[\"GM\", \"Gambia\"],[\"GN\", \"Guinea\"],[\"GP\", \"Guadalupe\"],[\"GQ\", \"Guinea Ecuatorial\"],[\"GR\", \"Grecia\"],[\"GS\", \"Georgia del Sur e Islas Sandwich del Sur\"],[\"GT\", \"Guatemala\"],[\"GU\", \"Guam\"],[\"GW\", \"Guinea-Bissau\"],[\"GY\", \"Guayana\"],[\"HK\", \"Hong Kong\"],[\"HM\", \"Islas Heard y McDonald\"],[\"HN\", \"Honduras\"],[\"HR\", \"Croacia\"],[\"HT\", \"Haití\"],[\"HU\", \"Hungría\"],[\"ID\", \"Indonesia\"],[\"IE\", \"Irlanda\"],[\"IL\", \"Israel\"],[\"IM\", \"Isla de Man\"],[\"IN\", \"India\"],[\"IO\", \"Territorio Británico del Océano Índico\"],[\"IQ\", \"Irak\"],[\"IR\", \"Irán\"],[\"IS\", \"Islandia\"],[\"IT\", \"Italia\"],[\"JE\", \"Jersey\"],[\"JM\", \"Jamaica\"],[\"JO\", \"Jordania\"],[\"JP\", \"Japón\"],[\"KE\", \"Kenia\"],[\"KG\", \"Kirguistán\"],[\"KH\", \"Camboya\"],[\"KI\", \"Kiribati\"],[\"KM\", \"Comoros\"],[\"KN\", \"San Cristóbal y Nieves\"],[\"KP\", \"Corea del Norte\"],[\"KR\", \"Corea del Sur\"],[\"KW\", \"Kuwait\"],[\"KY\", \"Islas Caimán\"],[\"KZ\", \"Kazajstán\"],[\"LA\", \"Laos\"],[\"LB\", \"Líbano\"],[\"LC\", \"Santa Lucía\"],[\"LI\", \"Liechtenstein\"],[\"LK\", \"Sri Lanka\"],[\"LR\", \"Liberia\"],[\"LS\", \"Lesotho\"],[\"LT\", \"Lituania\"],[\"LU\", \"Luxemburgo\"],[\"LV\", \"Letonia\"],[\"LY\", \"Libia\"],[\"MA\", \"Marruecos\"],[\"MC\", \"Mónaco\"],[\"MD\", \"Moldova\"],[\"ME\", \"Montenegro\"],[\"MG\", \"Madagascar\"],[\"MH\", \"Islas Marshall\"],[\"MK\", \"Macedonia\"],[\"ML\", \"Mali\"],[\"MM\", \"Myanmar\"],[\"MN\", \"Mongolia\"],[\"MO\", \"Macao\"],[\"MQ\", \"Martinica\"],[\"MR\", \"Mauritania\"],[\"MS\", \"Montserrat\"],[\"MT\", \"Malta\"],[\"MU\", \"Mauricio\"],[\"MV\", \"Maldivas\"],[\"MW\", \"Malawi\"],[\"MX\", \"México\"],[\"MY\", \"Malasia\"],[\"MZ\", \"Mozambique\"],[\"NA\", \"Namibia\"],[\"NC\", \"Nueva Caledonia\"],[\"NE\", \"Níger\"],[\"NF\", \"Islas Norkfolk\"],[\"NG\", \"Nigeria\"],[\"NI\", \"Nicaragua\"],[\"NL\", \"Países Bajos\"],[\"NO\", \"Noruega\"],[\"NP\", \"Nepal\"],[\"NR\", \"Nauru\"],[\"NU\", \"Niue\"],[\"NZ\", \"Nueva Zelanda\"],[\"OM\", \"Omán\"],[\"PA\", \"Panamá\"],[\"PE\", \"Perú\"],[\"PF\", \"Polinesia Francesa\"],[\"PG\", \"Papúa Nueva Guinea\"],[\"PH\", \"Filipinas\"],[\"PK\", \"Pakistán\"],[\"PL\", \"Polonia\"],[\"PM\", \"San Pedro y Miquelón\"],[\"PN\", \"Islas Pitcairn\"],[\"PR\", \"Puerto Rico\"],[\"PS\", \"Palestina\"],[\"PT\", \"Portugal\"],[\"PW\", \"Islas Palaos\"],[\"PY\", \"Paraguay\"],[\"QA\", \"Qatar\"],[\"RE\", \"Reunión\"],[\"RO\", \"Rumanía\"],[\"RS\", \"Serbia y Montenegro\"],[\"RU\", \"Rusia\"],[\"RW\", \"Ruanda\"],[\"SA\", \"Arabia Saudita\"],[\"SB\", \"Islas Solomón\"],[\"SC\", \"Seychelles\"],[\"SD\", \"Sudán\"],[\"SE\", \"Suecia\"],[\"SG\", \"Singapur\"],[\"SH\", \"Santa Elena\"],[\"SI\", \"Eslovenia\"],[\"SJ\", \"Islas Svalbard y Jan Mayen\"],[\"SK\", \"Eslovaquia\"],[\"SL\", \"Sierra Leona\"],[\"SM\", \"San Marino\"],[\"SN\", \"Senegal\"],[\"SO\", \"Somalia\"],[\"SR\", \"Surinam\"],[\"ST\", \"Santo Tomé y Príncipe\"],[\"SV\", \"El Salvador\"],[\"SY\", \"Siria\"],[\"SZ\", \"Suazilandia\"],[\"TC\", \"Islas Turcas y Caicos\"],[\"TD\", \"Chad\"],[\"TF\", \"Territorios Australes Franceses\"],[\"TG\", \"Togo\"],[\"TH\", \"Tailandia\"],[\"TH\", \"Tanzania\"],[\"TJ\", \"Tayikistán\"],[\"TK\", \"Tokelau\"],[\"TL\", \"Timor-Leste\"],[\"TM\", \"Turkmenistán\"],[\"TN\", \"Túnez\"],[\"TO\", \"Tonga\"],[\"TR\", \"Turquía\"],[\"TT\", \"Trinidad y Tobago\"],[\"TV\", \"Tuvalu\"],[\"TW\",\"Taiwán\"],[\"UA\", \"Ucrania\"],[\"UG\", \"Uganda\"],[\"US\", \"Estados Unidos de América\"],[\"UY\", \"Uruguay\"],[\"UZ\", \"Uzbekistán\"],[\"VA\", \"Ciudad del Vaticano\"],[\"VC\", \"San Vicente y las Granadinas\"],[\"VE\", \"Venezuela\"],[\"VG\", \"Islas Vírgenes Británicas\"],[\"VI\", \"Islas Vírgenes de los Estados Unidos de América\"],[\"VN\", \"Vietnam\"],[\"VU\", \"Vanuatu\"],[\"WF\", \"Wallis y Futuna\"],[\"WS\", \"Samoa\"],[\"YE\", \"Yemen\"],[\"YT\", \"Mayotte\"],[\"ZA\", \"Sudáfrica\"]]);\r\n\r\n\r\n    useEffect(()=>{\r\n        setNombre(tablaDeConversion.get(codigoPais));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [codigoPais]);\r\n\r\n    \r\n\r\n    return {nombre}\r\n}\r\n\r\nexport default useTraerNombrePorCodigoPais;","import DatosBasicos from './DatosBasicos/DatosBasicos';\r\nimport Temperatura from './../../../Varios/Temperatura';\r\nimport useTraerNombrePorCodigoPais from './../../../../customHooks/useTraerNombrePorCodigoPais';\r\nimport \"./DatosPrincipales.css\";\r\n\r\nfunction DatosPrincipales(props) {\r\n  const datos = props.datos;\r\n  const datosNombreLugar = props.datosNombreLugar;\r\n  const fecha = new Date((datos.current.dt + datos.timezone_offset) * 1000);\r\n  const minutos = fecha.getUTCMinutes() < 10\r\n  ? `0${fecha.getUTCMinutes()}`\r\n  : `${fecha.getUTCMinutes()}`;\r\n  const hora = fecha.getUTCHours() > 12\r\n  ? `${fecha.getUTCHours() - 12}:${minutos} pm`\r\n  : `${fecha.getUTCHours()}:${minutos} am`;\r\n\r\n\r\n  const dias = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miércoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n  ];\r\n\r\n  const pais = useTraerNombrePorCodigoPais(datosNombreLugar.sys.country);\r\n\r\n  return (\r\n    <div className=\"datos-principales\">\r\n      <header className=\"datos-principales-header\">\r\n        <h2>{`${datosNombreLugar.name}, ${pais.nombre}`}</h2>\r\n        <h3>{`${dias[fecha.getUTCDay()]}, ${hora}`}</h3>\r\n        <Temperatura\r\n          temperaturaValor={datos.current.temp}\r\n          unidadTemperatura={props.unidadTemperatura}\r\n          etiqueta=\"h1\"\r\n          className=\"temperatura-principal\"\r\n        ></Temperatura>\r\n        <h2>\r\n          <Temperatura\r\n            temperaturaValor={datos.daily[0].temp.min}\r\n            unidadTemperatura={props.unidadTemperatura}\r\n            etiqueta=\"span\"\r\n          ></Temperatura>\r\n          /\r\n          <Temperatura\r\n            temperaturaValor={datos.daily[0].temp.max}\r\n            unidadTemperatura={props.unidadTemperatura}\r\n            etiqueta=\"span\"\r\n          ></Temperatura>\r\n        </h2>\r\n        <h3 className=\"datos-principales-descripcion\">\r\n          {datos.current.weather[0].description}\r\n        </h3>\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${datos.current.weather[0].icon}@2x.png`}\r\n          alt={`Imagen de${datos.current.weather[0].description}`}\r\n          className=\"datos-principales-imagen\"\r\n        />\r\n      </header>\r\n      <DatosBasicos datos={datos}></DatosBasicos>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatosPrincipales;\r\n","import Temperatura from \"./../../../../Varios/Temperatura\";\r\nimport \"./DiaDeSemana.css\";\r\n\r\nfunction DiaDeSemana(props) {\r\n    const dias = [\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"];\r\n    const meses = [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"];\r\n\r\n    return(\r\n        <div \r\n\r\n            className=\"pronostico-dia\">\r\n            <p>\r\n                <Temperatura \r\n                    temperaturaValor={props.temperaturaMin}\r\n                    unidadTemperatura={props.unidadTemperatura}\r\n                    etiqueta=\"span\">\r\n                </Temperatura>/\r\n                <Temperatura \r\n                    temperaturaValor={props.temperaturaMax}\r\n                    unidadTemperatura={props.unidadTemperatura}\r\n                    etiqueta=\"span\">\r\n                </Temperatura>\r\n            </p>\r\n            <img \r\n                src={`https://openweathermap.org/img/wn/${props.icono}@2x.png`} \r\n                alt={`Imagen de ${props.descripcion}`}\r\n                className=\"dia-imagen\"/>\r\n\r\n            <p>\r\n                {`${dias[props.fecha.getUTCDay()]}, ${props.fecha.getUTCDate()}/${meses[props.fecha.getUTCMonth()]}`} \r\n            </p>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiaDeSemana;\r\n","import DiaDeSemana from \"./DiaDeSemana/DiaDeSemana\";\r\nimport \"./PronosticoSemana.css\";\r\n\r\nfunction PronosticoSemana(props) {\r\n    const datos = props.datos;\r\n    var keyID = 0;\r\n\r\n    return (\r\n\r\n        <div className=\"pronostico-semana\">\r\n            <h2 className=\"pronostico-semana-titulo\">Pronóstico de la Semana</h2>\r\n\r\n            <div className=\"pronostico-semana-dias\">\r\n                {datos.daily.map((dia) => {\r\n                    keyID += 1;\r\n                    const fecha = new Date((dia.dt + datos.timezone_offset) *1000);\r\n                    return(\r\n                        <div key={keyID}>\r\n                            {keyID !== 1?(\r\n                                <DiaDeSemana\r\n                                    temperaturaMin={dia.temp.min}\r\n                                    temperaturaMax={dia.temp.max}\r\n                                    unidadTemperatura={props.unidadTemperatura}\r\n                                    icono={dia.weather[0].icon}\r\n                                    descripción={dia.weather[0].description}\r\n                                    fecha={fecha}>\r\n                                </DiaDeSemana>\r\n                            ):(\r\n                                <div className=\"pronostico-semana-primer-dia\"></div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default PronosticoSemana;\r\n","import {useState, useEffect} from 'react';\r\nimport \"./BotonGraficaDia.css\";\r\n\r\nfunction BotonGraficaDia(props){\r\n    const [activo, setActivo] = useState(\"inactivo\");\r\n\r\n    const datosGraficos = new Map([\r\n        [\r\n        'temperatura',\r\n        {\r\n            propiedad: \"temperatura\",\r\n            dataKey: 'Temperatura',\r\n            fill: '#fca311',\r\n            stroke: '#f2a735',\r\n            unit: ' °C',\r\n        },\r\n        ],\r\n        [\r\n        'humedad',\r\n        {\r\n            propiedad: \"humedad\",\r\n            dataKey: 'Humedad',\r\n            fill: '#3133B9',\r\n            stroke: '#262891',\r\n            unit: ' %',\r\n        },\r\n        ],\r\n        [\r\n        'viento',\r\n        {\r\n            propiedad: \"viento\",\r\n            dataKey: 'Viento',\r\n            fill: '#60D1C7',\r\n            stroke: '#31B9AB',\r\n            unit: ' m/s',\r\n        },\r\n        ],\r\n    ]);\r\n\r\n    useEffect(()=>{\r\n        if(props.propiedadActiva === props.propiedad){\r\n            setActivo(\"activo\");\r\n        }\r\n        else{\r\n            setActivo(\"inactivo\");\r\n        }    \r\n    },[props.propiedadActiva, props.propiedad]);\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className={`contenedor-boton-${props.propiedad}`}>\r\n            <button\r\n                className={`grafica-dia-boton ${activo}`}\r\n                onClick={() => props.colocarGraficoEnPantalla(datosGraficos.get(props.propiedad))}\r\n            >\r\n                {props.propiedad}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BotonGraficaDia;","import {useState} from 'react';\r\nimport {AreaChart, Area, XAxis, Tooltip, ResponsiveContainer} from 'recharts';\r\nimport BotonGraficaDia from \"./BotonGraficaDia/BotonGraficaDia\";\r\nimport './GraficaDia.css';\r\n\r\n\r\nfunction GraficaDia(props) {\r\n  const [graficoEnPantalla, setGraficoEnPantalla] = useState({\r\n    propiedad: \"temperatura\",\r\n    dataKey: 'Temperatura',\r\n    fill: '#fca311',\r\n    stroke: '#bf790d',\r\n    unit: ' °C',\r\n  });\r\n  var datosDia = [];\r\n\r\n  const datosPorHora = props.datos.slice(0, 12);\r\n\r\n  datosPorHora.forEach((hora) => {\r\n    var tiempoEnHoras = new Date((hora.dt + props.zonaHoraria) * 1000);\r\n\r\n    datosDia.push({\r\n      Temperatura: hora.temp,\r\n      Humedad: hora.humidity,\r\n      Viento: hora.wind_speed,\r\n      Hora:\r\n        tiempoEnHoras.getUTCHours() > 12\r\n          ? `${tiempoEnHoras.getUTCHours() - 12} pm`\r\n          : `${tiempoEnHoras.getUTCHours()} am`,\r\n    });\r\n  });\r\n\r\n  const colocarGraficoEnPantalla = (datosGrafico) =>{\r\n    setGraficoEnPantalla(datosGrafico);\r\n  }\r\n\r\n  return (\r\n    <div className=\"grafica-dia\">\r\n      <h2 className=\"grafica-dia-titulo\">Gráfica del Día</h2>\r\n      <ResponsiveContainer\r\n        className=\"grafica-dia-container\"\r\n        width=\"100%\"\r\n        height={150}\r\n      >\r\n        <AreaChart data={datosDia}>\r\n          {graficoEnPantalla ? (\r\n            <Area\r\n              type=\"natural\"\r\n              dataKey={graficoEnPantalla.dataKey}\r\n              fill={graficoEnPantalla.fill}\r\n              stroke={graficoEnPantalla.stroke}\r\n              unit={graficoEnPantalla.unit}\r\n              fillOpacity=\"0.6\"\r\n              \r\n            />\r\n          ) : (\r\n            <br />\r\n          )}\r\n\r\n          <XAxis \r\n            dataKey=\"Hora\" \r\n            tick={{fill: \"#fff\"}}\r\n            tickLine={{stroke:\"#fff\"}}\r\n            axisLine={{stroke:\"#fff\"}}/>\r\n          <Tooltip \r\n            itemStyle={{color:\"#000\", fontSize: 12, fontWeight: 600}}\r\n            labelStyle={{color:\"#000\", fontSize: 12, fontWeight: 900}}/>\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n      <div className=\"grafica-dia-botones\">\r\n      <BotonGraficaDia\r\n          propiedad=\"temperatura\"\r\n          propiedadActiva={graficoEnPantalla.propiedad}\r\n          colocarGraficoEnPantalla={colocarGraficoEnPantalla}\r\n        ></BotonGraficaDia>\r\n          <BotonGraficaDia\r\n          propiedad=\"humedad\"\r\n          propiedadActiva={graficoEnPantalla.propiedad}\r\n          colocarGraficoEnPantalla={colocarGraficoEnPantalla}\r\n        ></BotonGraficaDia>\r\n        <BotonGraficaDia\r\n          propiedad=\"viento\"\r\n          propiedadActiva={graficoEnPantalla.propiedad}\r\n          colocarGraficoEnPantalla={colocarGraficoEnPantalla}\r\n        ></BotonGraficaDia>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraficaDia;\r\n","import \"./UnidadTemperatura.css\"\r\n\r\nfunction UnidadTemperatura(props){\r\n    let botonNegritasC;\r\n    let botonNegritasF;\r\n\r\n    if(props.unidadTemperatura === \"C\"){\r\n        botonNegritasC = \"activo\";\r\n    }\r\n    else{\r\n        botonNegritasF = \"activo\";\r\n    }\r\n\r\n    return(\r\n        <div className=\"unidad-temperatura\">\r\n            <button \r\n                type=\"button\" \r\n                className={botonNegritasC}\r\n                onClick={()=>{props.levantarUnidadTemperatura(\"C\")}}\r\n                >ºC\r\n            </button>\r\n            <span>|</span>\r\n            <button \r\n                type=\"button\"\r\n                className={botonNegritasF}\r\n                onClick={()=>{props.levantarUnidadTemperatura(\"F\")}}\r\n            >ºF\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UnidadTemperatura;","import \"./Cargando.css\";\r\n\r\nfunction Cargando() {\r\n    return (\r\n        <div className=\"contenedor-de-cajas\">\r\n            <div className=\"cajas\">\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n                <div className=\"caja\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cargando","import {useState} from \"react\";\r\n\r\nimport DatosPrincipales from \"./DatosPrincipales/DatosPrincipales\";\r\nimport PronosticoSemana from \"./PronosticoSemana/PronosticoSemana\";\r\nimport GraficaDia from \"./GraficaDia/GraficaDia\";\r\nimport UnidadTemperatura from \"./UnidadTemperatura/UnidadTemperatura\";\r\nimport Cargando from \"./../../Varios/Cargando/Cargando\";\r\nimport \"./CuerpoDatos.css\";\r\n\r\n\r\nfunction CuerpoDatos(props){\r\n    const [unidadTemperatura, setUnidadTemperatura] = useState(\"C\");\r\n\r\n    const datos = props.datos; \r\n    const datosNombre = props.datosNombre;\r\n\r\n    const levantarUnidadTemperatura = (unidadLevantada) =>{\r\n        setUnidadTemperatura(unidadLevantada);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                props.cargando?(\r\n                    <Cargando></Cargando>\r\n                ):(\r\n                    <div className=\"cuerpo-datos\">\r\n                        <UnidadTemperatura \r\n                            levantarUnidadTemperatura={levantarUnidadTemperatura}\r\n                            unidadTemperatura={unidadTemperatura}>  \r\n                        </UnidadTemperatura>\r\n                        <DatosPrincipales \r\n                            datos={datos} \r\n                            datosNombreLugar={datosNombre}\r\n                            unidadTemperatura={unidadTemperatura}>  \r\n                        </DatosPrincipales>\r\n                        <PronosticoSemana \r\n                            datos={datos}\r\n                            unidadTemperatura={unidadTemperatura}>\r\n                        </PronosticoSemana>\r\n                        <GraficaDia \r\n                            datos={datos.hourly}\r\n                            zonaHoraria={datos.timezone_offset}\r\n                            unidadTemperatura={unidadTemperatura}>\r\n                        </GraficaDia>\r\n                    </div>\r\n                )\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CuerpoDatos;","import useTraerNombrePorCodigoPais from \"../../../../customHooks/useTraerNombrePorCodigoPais\";\r\nimport \"./Ciudad.css\";\r\n\r\nfunction Ciudad(props){\r\n    const datos = props.datos;\r\n    const cargando = props.cargando;\r\n\r\n    const temperatura = Math.floor(datos.main.temp - 273.15);\r\n    const pais = useTraerNombrePorCodigoPais(datos.sys.country);\r\n\r\n\r\n    return(\r\n        <div \r\n            tabIndex=\"0\"\r\n            className=\"ciudad\" \r\n            onClick={() => {\r\n                props.levantarDatosCiudad(props.datos, props.datos.coord, false);\r\n            }}\r\n            onKeyPress={(evento) => {\r\n                if (evento.key === 'Enter'){\r\n                    props.levantarDatosCiudad(props.datos, props.datos.coord, false);\r\n                }\r\n            }}>\r\n\r\n            {\r\n                cargando?(\r\n                    <h2>Cargando</h2>\r\n                ):(\r\n                    <div>\r\n                            \r\n                        <h3>{datos.name}, {pais.nombre}</h3>\r\n                        <ul>\r\n                            <li>{temperatura}ºC</li>\r\n                            <li>{datos.main.humidity}%</li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>Latitud: {datos.coord.lat}</li> \r\n                            <li>Longitud: {datos.coord.lon}</li>\r\n                        </ul>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ciudad;","import {useState, useEffect} from \"react\";\r\nimport Ciudad from './Ciudad/Ciudad';\r\nimport \"./CiudadesBuscadas.css\";\r\n\r\nfunction CiudadesBuscadas(props) {\r\n\r\n    const [ciudadesFiltradas, setCiudadesFiltradas] = useState([]);\r\n    const [ciudadesFiltradasCargadas, setCiudadesFiltradasCargadas] = useState(true);\r\n\r\n    const ciudades = props.ciudades;\r\n    const cargando = props.cargando;\r\n    let keyID = 0;\r\n\r\n    const filtrarCiudades = () =>{\r\n        let setsDeCoordenadas = [];;\r\n\r\n        ciudades.list.forEach((ciudad, index)=>{\r\n            const gradoDeSimplificacion = 30;\r\n\r\n            let coordenadasSimplificadas = `${Math.round(ciudad.coord.lat / gradoDeSimplificacion) * gradoDeSimplificacion}, ${Math.round(ciudad.coord.lon / gradoDeSimplificacion) * gradoDeSimplificacion}, ${ciudad.sys.country}`;\r\n            \r\n            setsDeCoordenadas = [...setsDeCoordenadas, coordenadasSimplificadas];\r\n        })\r\n\r\n        const ciudadesSinDuplicados = setsDeCoordenadas.map((setDeCoordenadas, index, array)=>{\r\n            \r\n            if(array.indexOf(setDeCoordenadas) === index){\r\n                return ciudades.list[index];\r\n            }\r\n            else{\r\n                return false\r\n            }\r\n        });\r\n\r\n        const ciudadesSinDuplicadosFiltrados = ciudadesSinDuplicados.filter((ciudad, index) => ciudad !== false); \r\n\r\n        setCiudadesFiltradasCargadas(false);\r\n        return ciudadesSinDuplicadosFiltrados;\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        const resultadoDeFiltrarCiudades = filtrarCiudades();\r\n\r\n        setCiudadesFiltradas(resultadoDeFiltrarCiudades);\r\n\r\n    // eslint-disable-next-line \r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {cargando && ciudadesFiltradasCargadas? (\r\n            <h1>Cargando</h1>\r\n            ) : (\r\n            <div>\r\n                <h1 className=\"indicacion-seleccionar-ciudad\">Seleccione una ciudad</h1>\r\n                    <div className=\"ciudades-buscadas\">\r\n                        {\r\n                        // eslint-disable-next-line\r\n                        ciudadesFiltradas.map((datosCiudad, indexMap) => {\r\n                            keyID += 1;   \r\n                                return (\r\n                                    <Ciudad\r\n                                        key={keyID}\r\n                                        datos={datosCiudad}\r\n                                        levantarDatosCiudad={props.levantarDatosCiudad}\r\n                                        cargando={cargando}\r\n                                    ></Ciudad>\r\n                                );  \r\n                        })}\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CiudadesBuscadas;\r\n","import CuerpoDatos from \"./CuerpoDatos/CuerpoDatos\";\r\nimport CiudadesBuscadas from \"./CiudadesBuscadas/CiudadesBuscadas\";\r\nimport \"./Contenido.css\";\r\n\r\nfunction Contenido(props){\r\n    const climaCiudadesPorNombre = props.climaCiudadesPorNombre;\r\n    const datosCiudad = props.datosCiudad;\r\n    const climaPorCoords = props.climaPorCoords;\r\n    const levantarDatosCiudad = props.levantarDatosCiudad;\r\n    const coordsCiudadCargando = props.coordsCiudadCargando;\r\n\r\n    return(\r\n        <div className=\"contenido\">\r\n            {\r\n                !coordsCiudadCargando?(\r\n                    <CuerpoDatos \r\n                        datos={climaPorCoords.datos} \r\n                        datosNombre={datosCiudad} \r\n                        cargando={climaPorCoords.cargando}>\r\n                    </CuerpoDatos>\r\n                ):(\r\n                    <CiudadesBuscadas \r\n                        ciudades={climaCiudadesPorNombre.datos} \r\n                        cargando={climaCiudadesPorNombre.cargando} \r\n                        levantarDatosCiudad={levantarDatosCiudad}>\r\n                    </CiudadesBuscadas>\r\n                )                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contenido;","export default __webpack_public_path__ + \"static/media/logo-app-clima.9744c283.png\";","import logo from \"./logo-app-clima.png\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <nav className=\"nav-top-navbar\">\r\n            <img src={logo} className=\"logo-image\" alt=\"logo-app-clima\" />\r\n            <p className=\"logo-texto\">\r\n                <span>App</span> \r\n                <span>Clima</span>\r\n            </p>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import \"./Header.css\";\r\n\r\nfunction Header(){\r\n    return(\r\n        <header className=\"titulo-app\">\r\n            <h1>Mi aplicación del clima</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import \"./BotonBusqueda.css\" \r\n\r\nfunction BotonBusqueda(){\r\n   return(\r\n    <button \r\n      type=\"submit\" \r\n      className=\"boton-busqueda\">\r\n      Buscar\r\n   </button>\r\n   )\r\n}\r\n\r\n\r\nexport default BotonBusqueda;","import \"./InputCiudad.css\"\r\n\r\nfunction InputCiudad(props){\r\n    const levantarCambio = (event) =>{\r\n        props.levantarInput(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <input \r\n            className=\"input-ciudad\" \r\n            type=\"text\" \r\n            placeholder=\"Ciudad...\"\r\n            onChange={levantarCambio}\r\n        />\r\n    );  \r\n}\r\n\r\n\r\n\r\nexport default InputCiudad;","import BotonBusqueda from \"./BotonBusqueda/BotonBusqueda\";\r\nimport InputCiudad from \"./InputCiudad/InputCiudad\";\r\nimport \"./Buscador.css\";\r\n\r\n\r\nfunction Buscador(props){\r\n\r\n   return(\r\n      <form className=\"buscador\" \r\n      onSubmit={(evento) => {\r\n         evento.preventDefault(); \r\n         props.levantarBusqueda(props.lugarEnBusqueda)}}>\r\n         <InputCiudad \r\n            levantarInput={props.levantarInput}>\r\n         </InputCiudad>\r\n         <BotonBusqueda \r\n            levantarBusqueda={props.levantarBusqueda} \r\n            lugarEnBusqueda={props.lugarEnBusqueda}>\r\n         </BotonBusqueda>\r\n      </form>\r\n   )\r\n}\r\n\r\n\r\nexport default Buscador;","import { useState } from \"react\";\r\nimport useFetchClimaPorCoords from \"../customHooks/useFetchClimaPorCoords\";\r\nimport useFetchClimaCiudadesPorNombre from \"../customHooks/useFetchClimaCiudadesPorNombre\";\r\nimport Contenido from \"./Contenido/Contenido\";\r\nimport NavBar from \"./Estatico/NavBar/NavBar\";\r\nimport Header from \"./Estatico/Header/Header\"\r\nimport Buscador from \"./Buscador/Buscador\";\r\nimport Cargando from \"./Varios/Cargando/Cargando\";\r\nimport \"./AppClima.css\";\r\n\r\n\r\nfunction AppClima() {\r\n  const [lugarEnBusqueda, setLugarEnBusqueda] = useState(null);\r\n  const [lugarBuscado, setLugarBuscado] = useState(null);\r\n  const [lugarCargando, setLugarCargando] = useState(true);\r\n\r\n  const [datosCiudad, setDatosCiudad] = useState(null);\r\n  const [coordsCiudad, setCoordsCiudad] = useState(null);\r\n  const [coordsCiudadCargando, setCoordsCiudadCargando] = useState(true);\r\n\r\n  const resultadoClimaCiudadesPorNombre = useFetchClimaCiudadesPorNombre(lugarBuscado, lugarCargando);\r\n  const resultadoClimaPorCoords = useFetchClimaPorCoords(coordsCiudad, coordsCiudadCargando);\r\n\r\n  const mensajeResultado = resultadoClimaCiudadesPorNombre.mensajeResultado;\r\n  const mensajeDeCarga = resultadoClimaCiudadesPorNombre.cargando;\r\n\r\n  const levantarDatosCiudad = (datosCiudadLevantados, coordsCiudadLevantados, coordsCiudadCargandoLevantados) => {\r\n    setDatosCiudad(datosCiudadLevantados);\r\n    setCoordsCiudad(coordsCiudadLevantados);\r\n    setCoordsCiudadCargando(coordsCiudadCargandoLevantados);\r\n\r\n  }\r\n\r\n  const levantarBusqueda = (lugarEnBusqueda) => {\r\n    setLugarBuscado(lugarEnBusqueda);\r\n    setLugarCargando(false);\r\n    setCoordsCiudadCargando(true);\r\n  }\r\n\r\n  const levantarInput = (valorInput) => {\r\n    setLugarEnBusqueda(valorInput);\r\n    setLugarCargando(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-clima\">\r\n      <NavBar></NavBar>\r\n      <Header></Header>\r\n      <div>\r\n        <Buscador\r\n          levantarInput={levantarInput}\r\n          levantarBusqueda={levantarBusqueda}\r\n          lugarEnBusqueda={lugarEnBusqueda}>\r\n        </Buscador>\r\n        <div className=\"mensaje-o-contenido\">\r\n          {mensajeDeCarga ? (\r\n            <div>\r\n              {\r\n                mensajeResultado === \"Cargando\" ? (\r\n                  <Cargando></Cargando>\r\n                ) :\r\n                  (\r\n                    <h2 className=\"mensaje-resultado\">{mensajeResultado}</h2>\r\n                  )\r\n              }\r\n            </div>\r\n          ) : (\r\n            <Contenido\r\n              climaCiudadesPorNombre={resultadoClimaCiudadesPorNombre}\r\n              datosCiudad={datosCiudad}\r\n              coordsCiudadCargando={coordsCiudadCargando}\r\n              climaPorCoords={resultadoClimaPorCoords}\r\n              levantarDatosCiudad={levantarDatosCiudad}>\r\n            </Contenido>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default AppClima;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppClima from './AppClima/AppClima.js'; \r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppClima/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}