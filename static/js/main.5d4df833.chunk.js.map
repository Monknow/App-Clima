{"version":3,"sources":["customHooks/traerDatos.js","customHooks/useFetchClimaPorCoords.js","customHooks/useFetchClimaCiudadesPorNombre.js","pronosticoClima/DatosBasicos.js","customHooks/useConvertirUnidadTemperatura.js","pronosticoClima/Temperatura.js","customHooks/useTraerNombrePorCodigoPais.js","pronosticoClima/DatosPrincipales.js","pronosticoClima/DiaDeSemana.js","pronosticoClima/PronosticoSemana.js","pronosticoClima/GraficaDia.js","pronosticoClima/UnidadTemperatura.js","pronosticoClima/CuerpoDatos.js","Ciudades/Ciudad.js","Ciudades/CiudadesBuscadas.js","Contenido.js","Buscador/BotonBusqueda.js","Buscador/InputCiudad.js","Buscador/Buscador.js","PronosticoClima.js","reportWebVitals.js","index.js"],"names":["traerDatos","url","a","axios","get","then","res","catch","err","console","error","response","useFetchClimaPorCoords","coords","coordsCargando","useState","datos","setDatos","cargando","setCargando","useEffect","montarDatos","urlDatosLugarBuscado","lat","lon","data","useFetchClimaCiudadesPorNombre","lugarBuscado","lugarCargando","mensajeResultado","setMensajeResultado","urlLugarBuscado","resultadoLimpio","JSON","parse","replace","count","status","DatosBasicos","props","current","humidity","Math","round","pressure","wind_speed","useConvertirUnidadTemperatura","valorTemperatura","unidadActual","unidadResultado","valor","setValor","unidad","setUnidad","Temperatura","temperaturaValor","unidadConvertida","unidadTemperatura","CustomTag","etiqueta","useTraerNombrePorCodigoPais","codigoPais","nombre","setNombre","tablaDeConversion","Map","DatosPrincipales","datosNombreLugar","fecha","Date","dt","timezone_offset","minutos","getUTCMinutes","length","hora","getUTCHours","pais","sys","country","className","name","getUTCDay","temp","daily","min","max","weather","description","src","icon","alt","DiaDeSemana","temperaturaMin","temperaturaMax","icono","descripcion","getUTCDate","getUTCMonth","PronosticoSemana","keyID","map","dia","descripci√≥n","datosGraficos","dataKey","fill","stroke","unit","GraficaDia","graficoEnPantalla","setGraficoEnPantalla","datosDia","slice","forEach","tiempoEnHoras","zonaHoraria","push","Humedad","Viento","Hora","ResponsiveContainer","width","height","AreaChart","Area","type","XAxis","Tooltip","id","onClick","UnidadTemperatura","botonNegritasC","botonNegritasF","levantarUnidadTemperatura","CuerpoDatos","setUnidadTemperatura","datosNombre","unidadLevantada","hourly","Ciudad","temperatura","floor","main","levantarDatosCiudad","coord","CiudadesBuscadas","ciudades","list","datosCiudad","Contenido","climaCiudadesPorNombre","climaPorCoords","coordsCiudadCargando","BotonBusqueda","levantarBusqueda","lugarEnBusqueda","InputCiudad","onChange","event","levantarInput","Buscador","PronosticoClima","setLugarEnBusqueda","setLugarBuscado","setLugarCargando","setDatosCiudad","coordsCiudad","setCoordsCiudad","setCoordsCiudadCargando","resultadoClimaCiudadesPorNombre","resultadoClimaPorCoords","mensajeDeCarga","target","value","datosCiudadLevantados","coordsCiudadLevantados","coordsCiudadCargandoLevantados","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAceA,EAZC,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACFC,IACRC,IAAIH,GACJI,MAAK,SAACC,GACH,OAAOA,KAEVC,OAAM,SAACC,GAEJ,OADAC,QAAQC,MAAMF,GACPA,EAAIG,YARJ,mFAAH,sDCiCDC,MA/Bf,SAAiCC,EAAQC,GAAiB,IAAD,EAE3BC,mBAAS,MAFkB,mBAE9CC,EAF8C,KAEvCC,EAFuC,OAGrBF,oBAAS,GAHY,mBAG9CG,EAH8C,KAGpCC,EAHoC,KA4BrD,OAtBAC,qBAAU,WACN,IAAsB,IAAnBN,EAA0B,CACzB,IAAMO,EAAW,uCAAG,4BAAAnB,EAAA,6DAEVoB,EAFU,8DAEoET,EAAOU,IAF3E,gBAEsFV,EAAOW,IAF7F,iGAKVxB,EAAWsB,GAChBjB,MAAK,SAACC,GACHW,EAASX,EAAImB,MACbN,GAAY,MARA,2CAAH,qDAYjBA,GAAY,GACZE,OAIL,CAACP,IAGG,CAACE,QAAOE,aC8BJQ,MA3Df,SAAyCC,EAAaC,GAAgB,IAAD,EACvCb,mBAAS,MAD8B,mBAC1DC,EAD0D,KACnDC,EADmD,OAEjCF,oBAAS,GAFwB,mBAE1DG,EAF0D,KAEhDC,EAFgD,OAIjBJ,mBAAS,4CAJQ,mBAI1Dc,EAJ0D,KAIxCC,EAJwC,KAwDjE,OAlDAV,qBAAU,YAEe,IAAlBQ,GAA4C,OAAjBD,GACT,uCAAG,4BAAAzB,EAAA,6DAEV6B,EAFU,+DAEgEJ,EAFhE,kGAIhBR,GAAY,GACZW,EAAoB,YALJ,SAOV9B,EAAW+B,GAChB1B,MAAK,SAACC,GAEH,IACI,IAAM0B,EAAkBC,KAAKC,MAAM5B,EAAImB,KAAKU,QAAQ,WAAY,KAEhE,QAAQ,GACJ,KAA+B,IAA1BH,EAAgBI,MACjBjB,GAAY,GACZW,EAAoB,6CACpB,MACJ,KAAoB,MAAfxB,EAAI+B,OACDpB,EAASe,GACTb,GAAY,GACZW,EAAoB,YACxB,MACJ,KAAKxB,EAAI+B,QAAU,IACflB,GAAY,GACZW,EAAoB,0EACpB,MACJ,QACIX,GAAY,GACZW,EAAoB,wEAG9B,SACEX,GAAY,GACZW,EAAoB,2EAlCZ,2CAAH,oDAwCjBT,KAKL,CAACO,IAEG,CAACZ,QAAOE,WAAUW,qBCzCdS,MAlBf,SAAsBC,GAElB,IAAMvB,EAAQuB,EAAMvB,MAEpB,OACI,8BACI,+BACI,sDAAkBA,EAAMwB,QAAQC,SAAhC,QACA,yDAAkBC,KAAKC,MAA+B,MAAzB3B,EAAMwB,QAAQI,SAAoB,KAAO,IAAtE,WAEA,qDAAiB5B,EAAMwB,QAAQK,WAA/B,iBCiBDC,MAxBf,SAAuCC,EAAkBC,EAAcC,GAAkB,IAAD,EAE1DlC,mBAASgC,GAFiD,mBAE7EG,EAF6E,KAEtEC,EAFsE,OAGxDpC,mBAAS,KAH+C,mBAG7EqC,EAH6E,KAGrEC,EAHqE,KAqBpF,OAhBAjC,qBAAU,WACc,MAAjB4B,GAA4C,MAApBC,GACvBE,EAA6B,EAAnBJ,EAAqB,EAAK,IACpCM,EAAU,MAEW,MAAjBL,GAA4C,MAApBC,IAC5BE,EAAmC,GAAzBJ,EAAmB,IAAQ,GACrCM,EAAU,QAIf,CAACJ,IAKG,CAACC,QAAOE,WCEJE,MAtBf,SAAqBf,GAAO,IAAD,EACGxB,mBAASwB,EAAMgB,kBADlB,mBAChBL,EADgB,KACTC,EADS,OAEKpC,mBAAS,KAFd,mBAEhBqC,EAFgB,KAERC,EAFQ,KAIjBG,EAAmBV,EAA8BI,EAAOE,EAAQb,EAAMkB,mBACtEC,EAAYnB,EAAMoB,SAUxB,OARAvC,qBAAU,WACN+B,EAASK,EAAiBN,OAC1BG,EAAUG,EAAiBJ,UAG5B,CAACI,IAIA,cAACE,EAAD,qBACQhB,KAAKC,MAAc,IAARO,GAAe,IADlC,QCDOU,MAhBf,SAAqCC,GAAa,IAAD,EACjB9C,mBAAS,MADQ,mBACtC+C,EADsC,KAC9BC,EAD8B,KAGvCC,EAAoB,IAAIC,IAAI,CAAC,CAAC,KAAM,WAAW,CAAC,KAAM,6BAA0B,CAAC,KAAM,iBAAc,CAAC,KAAM,qBAAqB,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,yBAAyB,CAAC,KAAM,UAAU,CAAC,KAAM,gBAAa,CAAC,KAAM,aAAa,CAAC,KAAM,mBAAmB,CAAC,KAAM,WAAW,CAAC,KAAM,aAAa,CAAC,KAAM,SAAS,CAAC,KAAM,kBAAe,CAAC,KAAM,iBAAc,CAAC,KAAM,wBAAwB,CAAC,KAAM,YAAY,CAAC,KAAM,cAAc,CAAC,KAAM,cAAW,CAAC,KAAM,gBAAgB,CAAC,KAAM,YAAY,CAAC,KAAM,cAAW,CAAC,KAAM,WAAW,CAAC,KAAM,SAAS,CAAC,KAAM,oBAAiB,CAAC,KAAM,YAAY,CAAC,KAAM,aAAU,CAAC,KAAM,WAAW,CAAC,KAAM,UAAU,CAAC,KAAM,WAAW,CAAC,KAAM,aAAU,CAAC,KAAM,eAAe,CAAC,KAAM,YAAY,CAAC,KAAM,cAAW,CAAC,KAAM,UAAU,CAAC,KAAM,aAAU,CAAC,KAAM,eAAe,CAAC,KAAM,gCAA6B,CAAC,KAAM,SAAS,CAAC,KAAM,SAAS,CAAC,KAAM,mBAAmB,CAAC,KAAM,cAAc,CAAC,KAAM,SAAS,CAAC,KAAM,cAAW,CAAC,KAAM,SAAS,CAAC,KAAM,YAAY,CAAC,KAAM,cAAc,CAAC,KAAM,QAAQ,CAAC,KAAM,cAAc,CAAC,KAAM,mBAAmB,CAAC,KAAM,UAAU,CAAC,KAAM,sBAAmB,CAAC,KAAM,YAAY,CAAC,KAAM,UAAU,CAAC,KAAM,aAAa,CAAC,KAAM,eAAY,CAAC,KAAM,2BAAwB,CAAC,KAAM,SAAS,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,UAAU,CAAC,KAAM,qBAAqB,CAAC,KAAM,WAAW,CAAC,KAAM,aAAU,CAAC,KAAM,cAAW,CAAC,KAAM,aAAa,CAAC,KAAM,QAAQ,CAAC,KAAM,kBAAkB,CAAC,KAAM,cAAc,CAAC,KAAM,eAAe,CAAC,KAAM,WAAW,CAAC,KAAM,YAAS,CAAC,KAAM,eAAe,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,oBAAoB,CAAC,KAAM,YAAY,CAAC,KAAM,SAAS,CAAC,KAAM,aAAa,CAAC,KAAM,eAAe,CAAC,KAAM,UAAU,CAAC,KAAM,UAAU,CAAC,KAAM,aAAa,CAAC,KAAM,qBAAqB,CAAC,KAAM,UAAU,CAAC,KAAM,4CAA4C,CAAC,KAAM,aAAa,CAAC,KAAM,QAAQ,CAAC,KAAM,iBAAiB,CAAC,KAAM,WAAW,CAAC,KAAM,aAAa,CAAC,KAAM,0BAA0B,CAAC,KAAM,YAAY,CAAC,KAAM,WAAW,CAAC,KAAM,YAAS,CAAC,KAAM,cAAW,CAAC,KAAM,aAAa,CAAC,KAAM,WAAW,CAAC,KAAM,UAAU,CAAC,KAAM,eAAe,CAAC,KAAM,SAAS,CAAC,KAAM,mDAA0C,CAAC,KAAM,QAAQ,CAAC,KAAM,WAAQ,CAAC,KAAM,YAAY,CAAC,KAAM,UAAU,CAAC,KAAM,UAAU,CAAC,KAAM,WAAW,CAAC,KAAM,YAAY,CAAC,KAAM,YAAS,CAAC,KAAM,SAAS,CAAC,KAAM,iBAAc,CAAC,KAAM,WAAW,CAAC,KAAM,YAAY,CAAC,KAAM,WAAW,CAAC,KAAM,6BAA0B,CAAC,KAAM,mBAAmB,CAAC,KAAM,iBAAiB,CAAC,KAAM,UAAU,CAAC,KAAM,mBAAgB,CAAC,KAAM,gBAAa,CAAC,KAAM,QAAQ,CAAC,KAAM,aAAU,CAAC,KAAM,kBAAe,CAAC,KAAM,iBAAiB,CAAC,KAAM,aAAa,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,YAAY,CAAC,KAAM,cAAc,CAAC,KAAM,WAAW,CAAC,KAAM,SAAS,CAAC,KAAM,aAAa,CAAC,KAAM,aAAU,CAAC,KAAM,WAAW,CAAC,KAAM,cAAc,CAAC,KAAM,cAAc,CAAC,KAAM,kBAAkB,CAAC,KAAM,aAAa,CAAC,KAAM,QAAQ,CAAC,KAAM,WAAW,CAAC,KAAM,YAAY,CAAC,KAAM,SAAS,CAAC,KAAM,aAAa,CAAC,KAAM,cAAc,CAAC,KAAM,cAAc,CAAC,KAAM,SAAS,CAAC,KAAM,YAAY,CAAC,KAAM,YAAY,CAAC,KAAM,UAAU,CAAC,KAAM,aAAU,CAAC,KAAM,WAAW,CAAC,KAAM,cAAc,CAAC,KAAM,WAAW,CAAC,KAAM,mBAAmB,CAAC,KAAM,YAAS,CAAC,KAAM,kBAAkB,CAAC,KAAM,WAAW,CAAC,KAAM,aAAa,CAAC,KAAM,mBAAgB,CAAC,KAAM,WAAW,CAAC,KAAM,SAAS,CAAC,KAAM,SAAS,CAAC,KAAM,QAAQ,CAAC,KAAM,iBAAiB,CAAC,KAAM,WAAQ,CAAC,KAAM,aAAU,CAAC,KAAM,WAAQ,CAAC,KAAM,sBAAsB,CAAC,KAAM,yBAAsB,CAAC,KAAM,aAAa,CAAC,KAAM,eAAY,CAAC,KAAM,WAAW,CAAC,KAAM,2BAAwB,CAAC,KAAM,kBAAkB,CAAC,KAAM,eAAe,CAAC,KAAM,aAAa,CAAC,KAAM,YAAY,CAAC,KAAM,gBAAgB,CAAC,KAAM,YAAY,CAAC,KAAM,SAAS,CAAC,KAAM,cAAW,CAAC,KAAM,cAAW,CAAC,KAAM,uBAAuB,CAAC,KAAM,SAAS,CAAC,KAAM,UAAU,CAAC,KAAM,kBAAkB,CAAC,KAAM,oBAAiB,CAAC,KAAM,cAAc,CAAC,KAAM,YAAS,CAAC,KAAM,UAAU,CAAC,KAAM,YAAY,CAAC,KAAM,eAAe,CAAC,KAAM,aAAa,CAAC,KAAM,8BAA8B,CAAC,KAAM,cAAc,CAAC,KAAM,gBAAgB,CAAC,KAAM,cAAc,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,+BAAyB,CAAC,KAAM,eAAe,CAAC,KAAM,SAAS,CAAC,KAAM,eAAe,CAAC,KAAM,yBAAyB,CAAC,KAAM,QAAQ,CAAC,KAAM,mCAAmC,CAAC,KAAM,QAAQ,CAAC,KAAM,aAAa,CAAC,KAAM,YAAY,CAAC,KAAM,iBAAc,CAAC,KAAM,WAAW,CAAC,KAAM,eAAe,CAAC,KAAM,mBAAgB,CAAC,KAAM,YAAS,CAAC,KAAM,SAAS,CAAC,KAAM,cAAW,CAAC,KAAM,qBAAqB,CAAC,KAAM,UAAU,CAAC,KAAK,aAAU,CAAC,KAAM,WAAW,CAAC,KAAM,UAAU,CAAC,KAAM,gCAA6B,CAAC,KAAM,WAAW,CAAC,KAAM,iBAAc,CAAC,KAAM,uBAAuB,CAAC,KAAM,gCAAgC,CAAC,KAAM,aAAa,CAAC,KAAM,mCAA6B,CAAC,KAAM,yDAAmD,CAAC,KAAM,WAAW,CAAC,KAAM,WAAW,CAAC,KAAM,mBAAmB,CAAC,KAAM,SAAS,CAAC,KAAM,SAAS,CAAC,KAAM,WAAW,CAAC,KAAM,kBAUt4J,OAPA7C,qBAAU,WACN2C,EAAUC,EAAkB5D,IAAIyD,MAEjC,CAACA,IAIG,CAACC,WCiDGI,MA7Df,SAA0B3B,GACxB,IAAMvB,EAAQuB,EAAMvB,MACdmD,EAAmB5B,EAAM4B,iBACzBC,EAAQ,IAAIC,KAAkD,KAA5CrD,EAAMwB,QAAQ8B,GAAKtD,EAAMuD,kBAC3CC,EAA2C,IAAjCJ,EAAMK,gBAAgBC,OAAtB,WACVN,EAAMK,iBADI,UAEXL,EAAMK,iBACLE,EAAOP,EAAMQ,cAAgB,GAAtB,UACRR,EAAMQ,cAAgB,GADd,YACoBJ,EADpB,iBAERJ,EAAMQ,cAFE,YAEeJ,EAFf,OAcPK,EAAOjB,EAA4BO,EAAiBW,IAAIC,SAE9D,OACE,sBAAKC,UAAU,oBAAf,UACE,yBAAQA,UAAU,2BAAlB,UACE,uCAAQb,EAAiBc,KAAzB,aAAkCJ,EAAKf,UACvC,uCAhBO,CACX,UACA,QACA,SACA,eACA,SACA,UACA,aASiBM,EAAMc,aAAnB,aAAoCP,KACpC,cAAC,EAAD,CACEpB,iBAAkBvC,EAAMwB,QAAQ2C,KAChC1B,kBAAmBlB,EAAMkB,kBACzBE,SAAS,KACTqB,UAAU,0BAEZ,+BACE,cAAC,EAAD,CACEzB,iBAAkBvC,EAAMoE,MAAM,GAAGD,KAAKE,IACtC5B,kBAAmBlB,EAAMkB,kBACzBE,SAAS,SAJb,IAOE,cAAC,EAAD,CACEJ,iBAAkBvC,EAAMoE,MAAM,GAAGD,KAAKG,IACtC7B,kBAAmBlB,EAAMkB,kBACzBE,SAAS,YAGb,oBAAIqB,UAAU,gCAAd,SACGhE,EAAMwB,QAAQ+C,QAAQ,GAAGC,cAE5B,qBACEC,IAAG,2CAAsCzE,EAAMwB,QAAQ+C,QAAQ,GAAGG,KAA/D,WACHC,IAAG,mBAAc3E,EAAMwB,QAAQ+C,QAAQ,GAAGC,aAC1CR,UAAU,gCAGd,cAAC,EAAD,CAAchE,MAAOA,QCvBZ4E,MAnCf,SAAqBrD,GAIjB,OACI,sBAEIyC,UAAU,wBAFd,UAGI,8BACI,cAAC,EAAD,CACIzB,iBAAkBhB,EAAMsD,eACxBpC,kBAAmBlB,EAAMkB,kBACzBE,SAAS,SAJjB,IAMI,cAAC,EAAD,CACIJ,iBAAkBhB,EAAMuD,eACxBrC,kBAAmBlB,EAAMkB,kBACzBE,SAAS,YAGjB,qBACI8B,IAAG,2CAAsClD,EAAMwD,MAA5C,WACHJ,IAAG,oBAAepD,EAAMyD,aACxBhB,UAAU,6BAEd,sCAxBK,CAAC,MAAO,MAAO,MAAO,SAAO,MAAO,MAAO,UAyBnCzC,EAAM6B,MAAMc,aADzB,aAC0C3C,EAAM6B,MAAM6B,aADtD,YAvBM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAwBR1D,EAAM6B,MAAM8B,kBAExF,4BCSGC,MArCf,SAA0B5D,GACtB,IAAMvB,EAAQuB,EAAMvB,MAChBoF,EAAQ,EAEZ,OAEI,sBAAKpB,UAAU,oBAAf,UACI,oBAAIA,UAAU,2BAAd,wCAEA,qBAAKA,UAAU,yBAAf,SACKhE,EAAMoE,MAAMiB,KAAI,SAACC,GACdF,GAAS,EACT,IAAMhC,EAAQ,IAAIC,KAAuC,KAAjCiC,EAAIhC,GAAKtD,EAAMuD,kBACvC,OACI,8BACe,IAAV6B,EACG,cAAC,EAAD,CACIP,eAAgBS,EAAInB,KAAKE,IACzBS,eAAgBQ,EAAInB,KAAKG,IACzB7B,kBAAmBlB,EAAMkB,kBACzBsC,MAAOO,EAAIf,QAAQ,GAAGG,KACtBa,iBAAaD,EAAIf,QAAQ,GAAGC,YAC5BpB,MAAOA,IAGX,qBAAKY,UAAU,+BAAf,gBAXEoB,Y,4CCZ5BI,EAAgB,IAAIvC,IAAI,CAC5B,CACE,cACA,CACEwC,QAAS,cACTC,KAAM,UACNC,OAAQ,UACRC,KAAM,WAGV,CACE,UACA,CACEH,QAAS,UACTC,KAAM,UACNC,OAAQ,UACRC,KAAM,OAGV,CACE,SACA,CACEH,QAAS,SACTC,KAAM,UACNC,OAAQ,UACRC,KAAM,WA2DGC,MArDf,SAAoBtE,GAAQ,IAAD,EACyBxB,mBAASyF,EAAcpG,IAAI,gBADpD,mBAClB0G,EADkB,KACCC,EADD,KAErBC,EAAW,GAgBf,OAbqBzE,EAAMvB,MAAMiG,MAAM,EAAG,IAE7BC,SAAQ,SAACvC,GAClB,IAAIwC,EAAgB,IAAI9C,KAAqC,KAA/BM,EAAKL,GAAK/B,EAAM6E,cAE9CJ,EAASK,KAAK,CACZ/D,YAAaqB,EAAKQ,KAClBmC,QAAS3C,EAAKlC,SACd8E,OAAQ5C,EAAK9B,WACb2E,KAAML,EAAcvC,cAAgB,GAA9B,UAAqCuC,EAAcvC,cAAc,GAAjE,iBAA8EuC,EAAcvC,cAA5F,YAKR,sBAAKI,UAAU,cAAf,UACA,oBAAIA,UAAU,qBAAd,mCACE,cAACyC,EAAA,EAAD,CAAqBzC,UAAU,wBAAwB0C,MAAM,OAAOC,OAAQ,IAA5E,SAEQ,eAACC,EAAA,EAAD,CAAWnG,KAAMuF,EAAjB,UAEGF,EAEC,cAACe,EAAA,EAAD,CACEC,KAAK,WACLrB,QAASK,EAAkBL,QAC3BC,KAAMI,EAAkBJ,KACxBC,OAAQG,EAAkBH,OAC1BC,KAAME,EAAkBF,OAG1B,uBAGA,cAACmB,EAAA,EAAD,CAAOtB,QAAQ,SACf,cAACuB,EAAA,EAAD,SAIV,sBAAKhD,UAAU,sBAAf,UACE,wBAAQA,UAAU,oBAAoBiD,GAAG,gCAAgCC,QAAS,kBAAMnB,EAAqBP,EAAcpG,IAAI,iBAA/H,yBACA,wBAAQ4E,UAAU,oBAAoBiD,GAAG,4BAA4BC,QAAS,kBAAMnB,EAAqBP,EAAcpG,IAAI,aAA3H,qBACA,wBAAQ4E,UAAU,oBAAoBiD,GAAG,2BAA2BC,QAAS,kBAAMnB,EAAqBP,EAAcpG,IAAI,YAA1H,2BCnDG+H,MA9Bf,SAA2B5F,GACvB,IAAI6F,EACAC,EASJ,MAP+B,MAA5B9F,EAAMkB,kBACL2E,EAAiB,SAGjBC,EAAiB,SAIjB,sBAAKrD,UAAU,qBAAf,UACI,wBACI8C,KAAK,SACL9C,UAAWoD,EACXF,QAAS,WAAK3F,EAAM+F,0BAA0B,MAHlD,mBAMA,qCACA,wBACIR,KAAK,SACL9C,UAAWqD,EACXH,QAAS,WAAK3F,EAAM+F,0BAA0B,MAHlD,uBC+BGC,MA3Cf,SAAqBhG,GAAO,IAAD,EAC2BxB,mBAAS,KADpC,mBAChB0C,EADgB,KACG+E,EADH,KAGjBxH,EAAQuB,EAAMvB,MACdyH,EAAclG,EAAMkG,YAM1B,OACI,8BAEQlG,EAAMrB,SACF,oBAAI8D,UAAU,oBAAd,sBAEA,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,CACIsD,0BAZU,SAACI,GAC/BF,EAAqBE,IAYDjF,kBAAmBA,IAEvB,cAAC,EAAD,CACIzC,MAAOA,EACPmD,iBAAkBsE,EAClBhF,kBAAmBA,IAEvB,cAAC,EAAD,CACIzC,MAAOA,EACPyC,kBAAmBA,IAEvB,cAAC,EAAD,CACIzC,MAAOA,EAAM2H,OACbvB,YAAapG,EAAMuD,gBACnBd,kBAAmBA,UCThCmF,MA9Bf,SAAgBrG,GACZ,IAAMvB,EAAQuB,EAAMvB,MACdE,EAAWqB,EAAMrB,SAEjB2H,EAAcnG,KAAKoG,MAAM9H,EAAM+H,KAAK5D,KAAO,QAC3CN,EAAOjB,EAA4B5C,EAAM8D,IAAIC,SAEnD,OACI,qBAAKC,UAAU,SAASkD,QAAS,WAC7B3F,EAAMyG,oBAAoBzG,EAAMvB,MAAOuB,EAAMvB,MAAMiI,OAAO,IAD9D,SAIQ/H,EACI,0CAEA,gCAEI,+BAAKF,EAAMiE,KAAX,KAAmBJ,EAAKf,UACxB,+BACI,+BAAK+E,EAAL,WACA,+BAAK7H,EAAM+H,KAAKtG,SAAhB,UAEJ,0CAAazB,EAAMiI,MAAM1H,IAAzB,eAA0CP,EAAMiI,MAAMzH,aCG/D0H,MAzBf,SAA0B3G,GACtB,IAAM4G,EAAW5G,EAAM4G,SACjBjI,EAAWqB,EAAMrB,SACnBkF,EAAQ,EAGZ,OACI,8BAEQlF,EACI,4CAEA,8BACKiI,EAASC,KAAK/C,KAAI,SAACgD,GAGhB,OAFAjD,GAAS,EAEF,cAAC,EAAD,CAAoBpF,MAAOqI,EAAaL,oBAAqBzG,EAAMyG,oBAAqB9H,SAAUA,GAArFkF,WCejCkD,MA9Bf,SAAmB/G,GACf,IAAMgH,EAAyBhH,EAAMgH,uBAC/BF,EAAc9G,EAAM8G,YACpBG,EAAiBjH,EAAMiH,eACvBR,EAAsBzG,EAAMyG,oBAC5BS,EAAuBlH,EAAMkH,qBAGnC,OACI,8BAESA,EAQG,cAAC,EAAD,CACIN,SAAUI,EAAuBvI,MACjCE,SAAUqI,EAAuBrI,SACjC8H,oBAAqBA,IAVzB,cAAC,EAAD,CACIhI,MAAOwI,EAAexI,MACtByH,YAAaY,EACbnI,SAAUsI,EAAetI,cCXlCwI,MAPf,SAAuBnH,GACpB,OACC,wBAAQuF,KAAK,SAAS9C,UAAU,iBAAiBkD,QAAS,WAAO3F,EAAMoH,iBAAiBpH,EAAMqH,kBAA9F,qBCQWC,MAVf,SAAqBtH,GAKjB,OAAO,uBAAOyC,UAAU,eAAe8C,KAAK,OAAOgC,SAJ5B,SAACC,GACpBxH,EAAMyH,cAAcD,OCWbE,MAVf,SAAkB1H,GACf,OACI,sBAAKyC,UAAU,WAAf,UACC,cAAC,EAAD,CAAagF,cAAezH,EAAMyH,gBAClC,cAAC,EAAD,CAAeL,iBAAkBpH,EAAMoH,iBAAkBC,gBAAiBrH,EAAMqH,sBC2DzEM,MA3Df,WAA4B,IAAD,EACqBnJ,mBAAS,MAD9B,mBAClB6I,EADkB,KACDO,EADC,OAEepJ,mBAAS,MAFxB,mBAElBY,EAFkB,KAEJyI,EAFI,OAGiBrJ,oBAAS,GAH1B,mBAGlBa,EAHkB,KAGHyI,EAHG,OAKatJ,mBAAS,MALtB,mBAKlBsI,EALkB,KAKLiB,EALK,OAMevJ,mBAAS,MANxB,mBAMlBwJ,EANkB,KAMJC,EANI,OAO+BzJ,oBAAS,GAPxC,mBAOlB0I,EAPkB,KAOIgB,EAPJ,KASnBC,EAAkChJ,EAA+BC,EAAcC,GAC/E+I,EAA0B/J,EAAuB2J,EAAcd,GAE/D5H,EAAmB6I,EAAgC7I,iBACnD+I,EAAiBF,EAAgCxJ,SAoBrD,OACE,gCACI,cAAC,EAAD,CACE8I,cARY,SAACD,GACrBI,EAAmBJ,EAAMc,OAAOC,OAChCT,GAAiB,IAOTV,iBAfe,SAACC,GACxBQ,EAAgBR,GAChBS,GAAiB,GACjBI,GAAwB,IAahBb,gBAAiBA,IAErB,8BACGgB,EACC,oBAAI5F,UAAU,oBAAd,SAAmCnD,IAEnC,cAAC,EAAD,CACE0H,uBAAwBmB,EACxBrB,YAAaA,EACbI,qBAAsBA,EACtBD,eAAgBmB,EAChB3B,oBAlCgB,SAAC+B,EAAuBC,EAAwBC,GAC1EX,EAAeS,GACfP,EAAgBQ,GAChBP,EAAwBQ,YCbbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/K,MAAK,YAAkD,IAA/CgL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d4df833.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst traerDatos = async (url) => {\r\n    return await axios\r\n        .get(url)\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n            return err.response;\r\n        });\r\n};\r\n\r\nexport default traerDatos;","import {useState, useEffect} from \"react\";\r\nimport traerDatos from \"./traerDatos\";\r\n\r\n\r\nfunction useFetchClimaPorCoords (coords, coordsCargando) {\r\n    \r\n    const [datos, setDatos] = useState(null);\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(coordsCargando === false) {\r\n            const montarDatos = async () => {\r\n                \r\n                const urlDatosLugarBuscado = `https://api.openweathermap.org/data/2.5/onecall?lat=${coords.lat}&lon=${coords.lon}&lang=es&exclude=minutely,alerts&units=metric&appid=cfdf46ac4ccb5e3a4775488af2e57ce0`;\r\n    \r\n    \r\n                await traerDatos(urlDatosLugarBuscado)\r\n                .then((res) =>{\r\n                    setDatos(res.data);\r\n                    setCargando(false);\r\n                });\r\n            }\r\n        \r\n            setCargando(true);\r\n            montarDatos();\r\n        }  \r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [coordsCargando]);\r\n\r\n\r\n    return {datos, cargando}\r\n}\r\n\r\nexport default useFetchClimaPorCoords;","import {useState, useEffect} from \"react\";\r\nimport traerDatos from \"./traerDatos\";\r\n\r\nfunction useFetchClimaCiudadesPorNombre (lugarBuscado,lugarCargando) {\r\n    const [datos, setDatos] = useState(null);\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n    const [mensajeResultado, setMensajeResultado] = useState(\"¬°Busque el clima de cualquier ciudad!\");\r\n\r\n    useEffect(() =>{\r\n\r\n        if(lugarCargando === false && lugarBuscado !== null){\r\n            const montarDatos = async () => {\r\n\r\n                const urlLugarBuscado = `http://openweathermap.org/data/2.5/find?callback=?&q=${lugarBuscado}&lang=es&units=metric&&type=like&sort=population&cnt=30&appid=439d4b804bc8187953eb36d2a8c26a02`\r\n    \r\n                setCargando(true);\r\n                setMensajeResultado(\"Cargando\");\r\n\r\n                await traerDatos(urlLugarBuscado)\r\n                .then((res) =>{\r\n\r\n                    try{\r\n                        const resultadoLimpio = JSON.parse(res.data.replace(/[\\\\?()]/g, \"\"));\r\n\r\n                        switch (true) {\r\n                            case resultadoLimpio.count === 0:\r\n                                setCargando(true);\r\n                                setMensajeResultado(\"Ciudad no encontrada. Revise su busqueda \");\r\n                                break;\r\n                            case res.status === 200:\r\n                                    setDatos(resultadoLimpio);\r\n                                    setCargando(false);\r\n                                    setMensajeResultado(\"Cargando\");\r\n                                break;\r\n                            case res.status >= 500:\r\n                                setCargando(true);\r\n                                setMensajeResultado(\"Ha ocurrido un error en el servidor, Intent√© m√°s tarde por favor\");\r\n                                break;\r\n                            default:\r\n                                setCargando(true);\r\n                                setMensajeResultado(\"Ha ocurrido un error desconocido. Intent√© m√°s tarde por favor\");\r\n                                break;\r\n                        }\r\n                    } catch{\r\n                        setCargando(true);\r\n                        setMensajeResultado(\"Ha ocurrido un error desconocido. Intent√© m√°s tarde por favor\");\r\n                    }\r\n\r\n                });\r\n                \r\n            }\r\n            montarDatos();\r\n        }\r\n\r\n\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [lugarCargando])\r\n\r\n    return {datos, cargando, mensajeResultado}\r\n}\r\n\r\nexport default useFetchClimaCiudadesPorNombre;","function DatosBasicos(props) {\r\n\r\n    const datos = props.datos;\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>Humedad a {`${datos.current.humidity}%`}</li>\r\n                <li>Presi√≥n a {`${Math.round(datos.current.pressure * 0.0145 * 100) / 100} PSI`}</li> \r\n                {/*La presi√≥n es convertida de hectopascales a PSI y es redondeada a dos decimales*/}\r\n                <li>Viento a {`${datos.current.wind_speed} m/s`}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default DatosBasicos;\r\n","import {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction useConvertirUnidadTemperatura(valorTemperatura, unidadActual, unidadResultado) {\r\n\r\n    const [valor, setValor] = useState(valorTemperatura);\r\n    const [unidad, setUnidad] = useState(\"C\");\r\n\r\n    useEffect(()=>{\r\n        if(unidadActual === \"C\" && unidadResultado === \"F\"){\r\n            setValor((valorTemperatura * 9/5) + 32);\r\n            setUnidad(\"F\");\r\n        }\r\n        else if(unidadActual === \"F\" && unidadResultado === \"C\"){\r\n            setValor((valorTemperatura - 32) * 5/9);\r\n            setUnidad(\"C\");\r\n        }\r\n    \r\n        // eslint-disable-next-line\r\n    }, [unidadResultado]);\r\n    \r\n\r\n\r\n\r\n    return {valor, unidad}\r\n}\r\n\r\nexport default useConvertirUnidadTemperatura;","import {useState, useEffect} from \"react\";\r\nimport useConvertirUnidadTemperatura from \"./../customHooks/useConvertirUnidadTemperatura\";\r\n\r\n\r\nfunction Temperatura(props){\r\n    const [valor, setValor] = useState(props.temperaturaValor);\r\n    const [unidad, setUnidad] = useState(\"C\");\r\n\r\n    const unidadConvertida = useConvertirUnidadTemperatura(valor, unidad, props.unidadTemperatura);\r\n    const CustomTag = props.etiqueta;\r\n\r\n    useEffect(()=>{\r\n        setValor(unidadConvertida.valor);\r\n        setUnidad(unidadConvertida.unidad);\r\n\r\n    // eslint-disable-next-line\r\n    }, [unidadConvertida]);\r\n\r\n\r\n    return(\r\n        <CustomTag>\r\n           {` ${Math.round(valor * 100) / 100} `} \r\n        </CustomTag>\r\n    );\r\n};\r\n\r\nexport default Temperatura;","import {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction useTraerNombrePorCodigoPais(codigoPais) {\r\n    const [nombre, setNombre] = useState(null);\r\n\r\n    const tablaDeConversion = new Map([[\"AD\", \"Andorra\"],[\"AE\", \"Emiratos √Årabes Unidos\"],[\"AF\", \"Afganist√°n\"],[\"AG\", \"Antigua y Barbuda\"],[\"AI\", \"Anguila\"],[\"AL\", \"Albania\"],[\"AM\", \"Armenia\"],[\"AN\", \"Antillas Neerlandesas\"],[\"AO\", \"Angola\"],[\"AQ\", \"Ant√°rtida\"],[\"AR\", \"Argentina\"],[\"AS\", \"Samoa Americana\"],[\"AT\", \"Austria\"],[\"AU\", \"Australia\"],[\"AW\", \"Aruba\"],[\"AX\", \"Islas √Åland\"],[\"AZ\", \"Azerbaiy√°n\"],[\"BA\", \"Bosnia y Herzegovina\"],[\"BB\", \"Barbados\"],[\"BD\", \"Bangladesh\"],[\"BE\", \"B√©lgica\"],[\"BF\", \"Burkina Faso\"],[\"BG\", \"Bulgaria\"],[\"BH\", \"Bahr√©in\"],[\"BI\", \"Burundi\"],[\"BJ\", \"Benin\"],[\"BL\", \"San Bartolom√©\"],[\"BM\", \"Bermudas\"],[\"BN\", \"Brun√©i\"],[\"BO\", \"Bolivia\"],[\"BR\", \"Brasil\"],[\"BS\", \"Bahamas\"],[\"BT\", \"Bhut√°n\"],[\"BV\", \"Isla Bouvet\"],[\"BW\", \"Botsuana\"],[\"BY\", \"Belar√∫s\"],[\"BZ\", \"Belice\"],[\"CA\", \"Canad√°\"],[\"CC\", \"Islas Cocos\"],[\"CF\", \"Rep√∫blica Centro-Africana\"],[\"CG\", \"Congo\"],[\"CH\", \"Suiza\"],[\"CI\", \"Costa de Marfil\"],[\"CK\", \"Islas Cook\"],[\"CL\", \"Chile\"],[\"CM\", \"Camer√∫n\"],[\"CN\", \"China\"],[\"CO\", \"Colombia\"],[\"CR\", \"Costa Rica\"],[\"CU\", \"Cuba\"],[\"CV\", \"Cabo Verde\"],[\"CX\", \"Islas Christmas\"],[\"CY\", \"Chipre\"],[\"CZ\", \"Rep√∫blica Checa\"],[\"DE\", \"Alemania\"],[\"DJ\", \"Yibuti\"],[\"DK\", \"Dinamarca\"],[\"DM\", \"Dom√≠nica\"],[\"DO\", \"Rep√∫blica Dominicana\"],[\"DZ\", \"Argel\"],[\"EC\", \"Ecuador\"],[\"EE\", \"Estonia\"],[\"EG\", \"Egipto\"],[\"EH\", \"Sahara Occidental\"],[\"ER\", \"Eritrea\"],[\"ES\", \"Espa√±a\"],[\"ET\", \"Etiop√≠a\"],[\"FI\", \"Finlandia\"],[\"FJ\", \"Fiji\"],[\"FK\", \"Islas Malvinas\"],[\"FM\", \"Micronesia\"],[\"FO\", \"Islas Faroe\"],[\"FR\", \"Francia\"],[\"GA\", \"Gab√≥n\"],[\"GB\", \"Reino Unido\"],[\"GD\", \"Granada\"],[\"GE\", \"Georgia\"],[\"GF\", \"Guayana Francesa\"],[\"GG\", \"Guernsey\"],[\"GH\", \"Ghana\"],[\"GI\", \"Gibraltar\"],[\"GL\", \"Groenlandia\"],[\"GM\", \"Gambia\"],[\"GN\", \"Guinea\"],[\"GP\", \"Guadalupe\"],[\"GQ\", \"Guinea Ecuatorial\"],[\"GR\", \"Grecia\"],[\"GS\", \"Georgia del Sur e Islas Sandwich del Sur\"],[\"GT\", \"Guatemala\"],[\"GU\", \"Guam\"],[\"GW\", \"Guinea-Bissau\"],[\"GY\", \"Guayana\"],[\"HK\", \"Hong Kong\"],[\"HM\", \"Islas Heard y McDonald\"],[\"HN\", \"Honduras\"],[\"HR\", \"Croacia\"],[\"HT\", \"Hait√≠\"],[\"HU\", \"Hungr√≠a\"],[\"ID\", \"Indonesia\"],[\"IE\", \"Irlanda\"],[\"IL\", \"Israel\"],[\"IM\", \"Isla de Man\"],[\"IN\", \"India\"],[\"IO\", \"Territorio Brit√°nico del Oc√©ano √çndico\"],[\"IQ\", \"Irak\"],[\"IR\", \"Ir√°n\"],[\"IS\", \"Islandia\"],[\"IT\", \"Italia\"],[\"JE\", \"Jersey\"],[\"JM\", \"Jamaica\"],[\"JO\", \"Jordania\"],[\"JP\", \"Jap√≥n\"],[\"KE\", \"Kenia\"],[\"KG\", \"Kirguist√°n\"],[\"KH\", \"Camboya\"],[\"KI\", \"Kiribati\"],[\"KM\", \"Comoros\"],[\"KN\", \"San Crist√≥bal y Nieves\"],[\"KP\", \"Corea del Norte\"],[\"KR\", \"Corea del Sur\"],[\"KW\", \"Kuwait\"],[\"KY\", \"Islas Caim√°n\"],[\"KZ\", \"Kazajst√°n\"],[\"LA\", \"Laos\"],[\"LB\", \"L√≠bano\"],[\"LC\", \"Santa Luc√≠a\"],[\"LI\", \"Liechtenstein\"],[\"LK\", \"Sri Lanka\"],[\"LR\", \"Liberia\"],[\"LS\", \"Lesotho\"],[\"LT\", \"Lituania\"],[\"LU\", \"Luxemburgo\"],[\"LV\", \"Letonia\"],[\"LY\", \"Libia\"],[\"MA\", \"Marruecos\"],[\"MC\", \"M√≥naco\"],[\"MD\", \"Moldova\"],[\"ME\", \"Montenegro\"],[\"MG\", \"Madagascar\"],[\"MH\", \"Islas Marshall\"],[\"MK\", \"Macedonia\"],[\"ML\", \"Mali\"],[\"MM\", \"Myanmar\"],[\"MN\", \"Mongolia\"],[\"MO\", \"Macao\"],[\"MQ\", \"Martinica\"],[\"MR\", \"Mauritania\"],[\"MS\", \"Montserrat\"],[\"MT\", \"Malta\"],[\"MU\", \"Mauricio\"],[\"MV\", \"Maldivas\"],[\"MW\", \"Malawi\"],[\"MX\", \"M√©xico\"],[\"MY\", \"Malasia\"],[\"MZ\", \"Mozambique\"],[\"NA\", \"Namibia\"],[\"NC\", \"Nueva Caledonia\"],[\"NE\", \"N√≠ger\"],[\"NF\", \"Islas Norkfolk\"],[\"NG\", \"Nigeria\"],[\"NI\", \"Nicaragua\"],[\"NL\", \"Pa√≠ses Bajos\"],[\"NO\", \"Noruega\"],[\"NP\", \"Nepal\"],[\"NR\", \"Nauru\"],[\"NU\", \"Niue\"],[\"NZ\", \"Nueva Zelanda\"],[\"OM\", \"Om√°n\"],[\"PA\", \"Panam√°\"],[\"PE\", \"Per√∫\"],[\"PF\", \"Polinesia Francesa\"],[\"PG\", \"Pap√∫a Nueva Guinea\"],[\"PH\", \"Filipinas\"],[\"PK\", \"Pakist√°n\"],[\"PL\", \"Polonia\"],[\"PM\", \"San Pedro y Miquel√≥n\"],[\"PN\", \"Islas Pitcairn\"],[\"PR\", \"Puerto Rico\"],[\"PS\", \"Palestina\"],[\"PT\", \"Portugal\"],[\"PW\", \"Islas Palaos\"],[\"PY\", \"Paraguay\"],[\"QA\", \"Qatar\"],[\"RE\", \"Reuni√≥n\"],[\"RO\", \"Ruman√≠a\"],[\"RS\", \"Serbia y Montenegro\"],[\"RU\", \"Rusia\"],[\"RW\", \"Ruanda\"],[\"SA\", \"Arabia Saudita\"],[\"SB\", \"Islas Solom√≥n\"],[\"SC\", \"Seychelles\"],[\"SD\", \"Sud√°n\"],[\"SE\", \"Suecia\"],[\"SG\", \"Singapur\"],[\"SH\", \"Santa Elena\"],[\"SI\", \"Eslovenia\"],[\"SJ\", \"Islas Svalbard y Jan Mayen\"],[\"SK\", \"Eslovaquia\"],[\"SL\", \"Sierra Leona\"],[\"SM\", \"San Marino\"],[\"SN\", \"Senegal\"],[\"SO\", \"Somalia\"],[\"SR\", \"Surinam\"],[\"ST\", \"Santo Tom√© y Pr√≠ncipe\"],[\"SV\", \"El Salvador\"],[\"SY\", \"Siria\"],[\"SZ\", \"Suazilandia\"],[\"TC\", \"Islas Turcas y Caicos\"],[\"TD\", \"Chad\"],[\"TF\", \"Territorios Australes Franceses\"],[\"TG\", \"Togo\"],[\"TH\", \"Tailandia\"],[\"TH\", \"Tanzania\"],[\"TJ\", \"Tayikist√°n\"],[\"TK\", \"Tokelau\"],[\"TL\", \"Timor-Leste\"],[\"TM\", \"Turkmenist√°n\"],[\"TN\", \"T√∫nez\"],[\"TO\", \"Tonga\"],[\"TR\", \"Turqu√≠a\"],[\"TT\", \"Trinidad y Tobago\"],[\"TV\", \"Tuvalu\"],[\"TW\",\"Taiw√°n\"],[\"UA\", \"Ucrania\"],[\"UG\", \"Uganda\"],[\"US\", \"Estados Unidos de Am√©rica\"],[\"UY\", \"Uruguay\"],[\"UZ\", \"Uzbekist√°n\"],[\"VA\", \"Ciudad del Vaticano\"],[\"VC\", \"San Vicente y las Granadinas\"],[\"VE\", \"Venezuela\"],[\"VG\", \"Islas V√≠rgenes Brit√°nicas\"],[\"VI\", \"Islas V√≠rgenes de los Estados Unidos de Am√©rica\"],[\"VN\", \"Vietnam\"],[\"VU\", \"Vanuatu\"],[\"WF\", \"Wallis y Futuna\"],[\"WS\", \"Samoa\"],[\"YE\", \"Yemen\"],[\"YT\", \"Mayotte\"],[\"ZA\", \"Sud√°frica\"]]);\r\n\r\n\r\n    useEffect(()=>{\r\n        setNombre(tablaDeConversion.get(codigoPais));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [codigoPais]);\r\n\r\n    \r\n\r\n    return {nombre}\r\n}\r\n\r\nexport default useTraerNombrePorCodigoPais;","import DatosBasicos from './DatosBasicos';\nimport Temperatura from './Temperatura';\nimport useTraerNombrePorCodigoPais from './../customHooks/useTraerNombrePorCodigoPais';\n\nfunction DatosPrincipales(props) {\n  const datos = props.datos;\n  const datosNombreLugar = props.datosNombreLugar;\n  const fecha = new Date((datos.current.dt + datos.timezone_offset) * 1000);\n  const minutos = fecha.getUTCMinutes().length === 1\n  ? `0${fecha.getUTCMinutes()}`\n  : `${fecha.getUTCMinutes()}`;\n  const hora = fecha.getUTCHours() > 12\n  ? `${fecha.getUTCHours() - 12}:${minutos} pm`\n  : `${fecha.getUTCHours()}:${minutos} am`;\n\n  const dias = [\n    'Domingo',\n    'Lunes',\n    'Martes',\n    'Mi√©rcoles',\n    'Jueves',\n    'Viernes',\n    'S√°bado',\n  ];\n\n  const pais = useTraerNombrePorCodigoPais(datosNombreLugar.sys.country);\n\n  return (\n    <div className=\"datos-principales\">\n      <header className=\"datos-principales-header\">\n        <h2>{`${datosNombreLugar.name}, ${pais.nombre}`}</h2>\n        <h3>{`${dias[fecha.getUTCDay()]}, ${hora}`}</h3>\n        <Temperatura\n          temperaturaValor={datos.current.temp}\n          unidadTemperatura={props.unidadTemperatura}\n          etiqueta=\"h1\"\n          className=\"temperatura-principal\"\n        ></Temperatura>\n        <h2>\n          <Temperatura\n            temperaturaValor={datos.daily[0].temp.min}\n            unidadTemperatura={props.unidadTemperatura}\n            etiqueta=\"span\"\n          ></Temperatura>\n          /\n          <Temperatura\n            temperaturaValor={datos.daily[0].temp.max}\n            unidadTemperatura={props.unidadTemperatura}\n            etiqueta=\"span\"\n          ></Temperatura>\n        </h2>\n        <h3 className=\"datos-principales-descripcion\">\n          {datos.current.weather[0].description}\n        </h3>\n        <img\n          src={`http://openweathermap.org/img/wn/${datos.current.weather[0].icon}@2x.png`}\n          alt={`Imagen de${datos.current.weather[0].description}`}\n          className=\"datos-principales-imagen\"\n        />\n      </header>\n      <DatosBasicos datos={datos}></DatosBasicos>\n    </div>\n  );\n}\n\nexport default DatosPrincipales;\n","import Temperatura from \"./Temperatura\";\r\n\r\nfunction DiaDeSemana(props) {\r\n    const dias = [\"Dom\", \"Lun\", \"Mar\", \"Mi√©\", \"Jue\", \"Vie\", \"S√°b\"];\r\n    const meses = [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"];\r\n\r\n    return(\r\n        <div \r\n\r\n            className=\"pronostico-semana-dia\">\r\n            <p>\r\n                <Temperatura \r\n                    temperaturaValor={props.temperaturaMin}\r\n                    unidadTemperatura={props.unidadTemperatura}\r\n                    etiqueta=\"span\">\r\n                </Temperatura>/\r\n                <Temperatura \r\n                    temperaturaValor={props.temperaturaMax}\r\n                    unidadTemperatura={props.unidadTemperatura}\r\n                    etiqueta=\"span\">\r\n                </Temperatura>\r\n            </p>\r\n            <img \r\n                src={`http://openweathermap.org/img/wn/${props.icono}@2x.png`} \r\n                alt={`Imagen de ${props.descripcion}`}\r\n                className=\"pronostico-semana-imagen\"/>\r\n\r\n            <p>\r\n                {`${dias[props.fecha.getUTCDay()]}, ${props.fecha.getUTCDate()}/${meses[props.fecha.getUTCMonth()]}`} \r\n            </p>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiaDeSemana;\r\n","import DiaDeSemana from \"./DiaDeSemana\";\r\n\r\nfunction PronosticoSemana(props) {\r\n    const datos = props.datos;\r\n    var keyID = 0;\r\n\r\n    return (\r\n\r\n        <div className=\"pronostico-semana\">\r\n            <h2 className=\"pronostico-semana-titulo\">Pron√≥stico de la Semana</h2>\r\n\r\n            <div className=\"pronostico-semana-dias\">\r\n                {datos.daily.map((dia) => {\r\n                    keyID += 1;\r\n                    const fecha = new Date((dia.dt + datos.timezone_offset) *1000);\r\n                    return(\r\n                        <div key={keyID}>\r\n                            {keyID !== 1?(\r\n                                <DiaDeSemana\r\n                                    temperaturaMin={dia.temp.min}\r\n                                    temperaturaMax={dia.temp.max}\r\n                                    unidadTemperatura={props.unidadTemperatura}\r\n                                    icono={dia.weather[0].icon}\r\n                                    descripci√≥n={dia.weather[0].description}\r\n                                    fecha={fecha}>\r\n                                </DiaDeSemana>\r\n                            ):(\r\n                                <div className=\"pronostico-semana-primer-dia\">a</div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default PronosticoSemana;\r\n","import {useState} from \"react\";\r\nimport {AreaChart, Area, XAxis, Tooltip, ResponsiveContainer} from \"recharts\";\r\n\r\n\r\nconst datosGraficos = new Map([\r\n  [\r\n    \"temperatura\",\r\n    {\r\n      dataKey: \"Temperatura\",\r\n      fill: \"#f2a735\",\r\n      stroke: \"#bf790d\",\r\n      unit: \" C¬∞\",\r\n    },\r\n  ],\r\n  [\r\n    \"humedad\",\r\n    {\r\n      dataKey: \"Humedad\",\r\n      fill: \"#4b87cc\",\r\n      stroke: \"#2b62a1\",\r\n      unit: \" %\",\r\n    },\r\n  ],\r\n  [\r\n    \"viento\",\r\n    {\r\n      dataKey: \"Viento\",\r\n      fill: \"#a662de\",\r\n      stroke: \"#7e34a8\",\r\n      unit: \" m/s\",\r\n    },\r\n  ],\r\n]);\r\n\r\n\r\nfunction GraficaDia(props) {\r\n  const [graficoEnPantalla, setGraficoEnPantalla] = useState(datosGraficos.get(\"temperatura\"));\r\n  var datosDia = [];\r\n\r\n\r\n  const datosPorHora = props.datos.slice(0, 12);\r\n\r\n  datosPorHora.forEach((hora) => {\r\n      var tiempoEnHoras = new Date((hora.dt + props.zonaHoraria) * 1000);\r\n\r\n      datosDia.push({\r\n        Temperatura: hora.temp,\r\n        Humedad: hora.humidity,\r\n        Viento: hora.wind_speed,\r\n        Hora: tiempoEnHoras.getUTCHours() > 12? `${tiempoEnHoras.getUTCHours()-12} pm` : `${tiempoEnHoras.getUTCHours()} am`,\r\n      });\r\n  });\r\n\r\n  return (\r\n      <div className=\"grafica-dia\">\r\n      <h2 className=\"grafica-dia-titulo\">Gr√°fica del D√≠a</h2>\r\n        <ResponsiveContainer className=\"grafica-dia-container\" width=\"100%\" height={125}>\r\n            \r\n                <AreaChart data={datosDia}>\r\n\r\n                  {graficoEnPantalla?\r\n                  (\r\n                    <Area\r\n                      type=\"monotone\"\r\n                      dataKey={graficoEnPantalla.dataKey}\r\n                      fill={graficoEnPantalla.fill}\r\n                      stroke={graficoEnPantalla.stroke}\r\n                      unit={graficoEnPantalla.unit}\r\n                    />\r\n                  ):(\r\n                    <br/>\r\n                  )}\r\n\r\n                    <XAxis dataKey=\"Hora\" />\r\n                    <Tooltip />\r\n                </AreaChart>\r\n\r\n        </ResponsiveContainer>\r\n          <div className=\"grafica-dia-botones\">\r\n            <button className=\"grafica-dia-boton\" id=\"grafica-dia-boton-temperatura\" onClick={() => setGraficoEnPantalla(datosGraficos.get(\"temperatura\"))}>Temperatura</button>\r\n            <button className=\"grafica-dia-boton\" id=\"grafica-dia-boton-humedad\" onClick={() => setGraficoEnPantalla(datosGraficos.get(\"humedad\"))}>Humedad</button>\r\n            <button className=\"grafica-dia-boton\" id=\"grafica-dia-boton-viento\" onClick={() => setGraficoEnPantalla(datosGraficos.get(\"viento\"))}>Viento</button>\r\n\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default GraficaDia;\r\n","function UnidadTemperatura(props){\r\n    let botonNegritasC;\r\n    let botonNegritasF;\r\n\r\n    if(props.unidadTemperatura === \"C\"){\r\n        botonNegritasC = \"activo\";\r\n    }\r\n    else{\r\n        botonNegritasF = \"activo\";\r\n    }\r\n\r\n    return(\r\n        <div className=\"unidad-temperatura\">\r\n            <button \r\n                type=\"button\" \r\n                className={botonNegritasC}\r\n                onClick={()=>{props.levantarUnidadTemperatura(\"C\")}}\r\n                >¬∫C\r\n            </button>\r\n            <span>|</span>\r\n            <button \r\n                type=\"button\"\r\n                className={botonNegritasF}\r\n                onClick={()=>{props.levantarUnidadTemperatura(\"F\")}}\r\n            >¬∫F\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UnidadTemperatura;","import {useState} from \"react\";\r\n\r\nimport DatosPrincipales from \"./DatosPrincipales\";\r\nimport PronosticoSemana from \"./PronosticoSemana\";\r\nimport GraficaDia from \"./GraficaDia\";\r\nimport UnidadTemperatura from \"./UnidadTemperatura\";\r\n\r\n\r\nfunction CuerpoDatos(props){\r\n    const [unidadTemperatura, setUnidadTemperatura] = useState(\"C\");\r\n\r\n    const datos = props.datos; \r\n    const datosNombre = props.datosNombre;\r\n\r\n    const levantarUnidadTemperatura = (unidadLevantada) =>{\r\n        setUnidadTemperatura(unidadLevantada);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                props.cargando?(\r\n                    <h1 className=\"mensaje-resultado\">Cargando</h1>\r\n                ):(\r\n                    <div className=\"clima-datos\">\r\n                        <UnidadTemperatura \r\n                            levantarUnidadTemperatura={levantarUnidadTemperatura}\r\n                            unidadTemperatura={unidadTemperatura}>  \r\n                        </UnidadTemperatura>\r\n                        <DatosPrincipales \r\n                            datos={datos} \r\n                            datosNombreLugar={datosNombre}\r\n                            unidadTemperatura={unidadTemperatura}>  \r\n                        </DatosPrincipales>\r\n                        <PronosticoSemana \r\n                            datos={datos}\r\n                            unidadTemperatura={unidadTemperatura}>\r\n                        </PronosticoSemana>\r\n                        <GraficaDia \r\n                            datos={datos.hourly}\r\n                            zonaHoraria={datos.timezone_offset}\r\n                            unidadTemperatura={unidadTemperatura}>\r\n                        </GraficaDia>\r\n                    </div>\r\n                )\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CuerpoDatos;","import useTraerNombrePorCodigoPais from \"./../customHooks/useTraerNombrePorCodigoPais\";\r\n\r\nfunction Ciudad(props){\r\n    const datos = props.datos;\r\n    const cargando = props.cargando;\r\n\r\n    const temperatura = Math.floor(datos.main.temp - 273.15);\r\n    const pais = useTraerNombrePorCodigoPais(datos.sys.country);\r\n\r\n    return(\r\n        <div className=\"ciudad\" onClick={() => {\r\n            props.levantarDatosCiudad(props.datos, props.datos.coord, false);\r\n            }}>\r\n            {\r\n                cargando?(\r\n                    <h2>Cargando</h2>\r\n                ):(\r\n                    <div>\r\n                            \r\n                        <h3>{datos.name}, {pais.nombre}</h3>\r\n                        <ul>\r\n                            <li>{temperatura}¬∫C</li>\r\n                            <li>{datos.main.humidity}%</li>\r\n                        </ul>\r\n                        <p>Latitud: {datos.coord.lat}, Longitud: {datos.coord.lon}</p>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ciudad;","import Ciudad from \"./Ciudad\"\r\n\r\nfunction CiudadesBuscadas(props){\r\n    const ciudades = props.ciudades;\r\n    const cargando = props.cargando;\r\n    let keyID = 0;\r\n\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                cargando?(\r\n                    <h1>Cargandioo</h1>\r\n                ):(\r\n                    <div>\r\n                        {ciudades.list.map((datosCiudad)=>{\r\n                            keyID += 1;\r\n                    \r\n                            return <Ciudad key={keyID} datos={datosCiudad} levantarDatosCiudad={props.levantarDatosCiudad} cargando={cargando}></Ciudad>\r\n                        })}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CiudadesBuscadas;\r\n\r\n","import CuerpoDatos from \"./pronosticoClima/CuerpoDatos\";\r\nimport CiudadesBuscadas from \"./Ciudades/CiudadesBuscadas\";\r\n\r\nfunction Contenido(props){\r\n    const climaCiudadesPorNombre = props.climaCiudadesPorNombre;\r\n    const datosCiudad = props.datosCiudad;\r\n    const climaPorCoords = props.climaPorCoords;\r\n    const levantarDatosCiudad = props.levantarDatosCiudad;\r\n    const coordsCiudadCargando = props.coordsCiudadCargando;\r\n\r\n \r\n    return(\r\n        <div>\r\n            {\r\n                !coordsCiudadCargando?(\r\n                    <CuerpoDatos \r\n                        datos={climaPorCoords.datos} \r\n                        datosNombre={datosCiudad} \r\n                        cargando={climaPorCoords.cargando}>\r\n                    </CuerpoDatos>\r\n                   \r\n                ):(\r\n                    <CiudadesBuscadas \r\n                        ciudades={climaCiudadesPorNombre.datos} \r\n                        cargando={climaCiudadesPorNombre.cargando} \r\n                        levantarDatosCiudad={levantarDatosCiudad}>\r\n                    </CiudadesBuscadas>\r\n                )                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contenido;","function BotonBusqueda(props){\r\n   return(\r\n    <button type=\"button\" className=\"boton-busqueda\" onClick={() => {props.levantarBusqueda(props.lugarEnBusqueda)}}>Buscar</button>\r\n   )\r\n}\r\n\r\n\r\nexport default BotonBusqueda;","function InputCiudad(props){\r\n    const levantarCambio = (event) =>{\r\n        props.levantarInput(event);\r\n    }\r\n\r\n    return(<input className=\"input-ciudad\" type=\"text\" onChange={levantarCambio}/>);  \r\n}\r\n\r\n\r\n\r\nexport default InputCiudad;","import BotonBusqueda from \"./BotonBusqueda\";\r\nimport InputCiudad from \"./InputCiudad\";\r\n\r\nfunction Buscador(props){\r\n   return(\r\n       <div className=\"buscador\">\r\n        <InputCiudad levantarInput={props.levantarInput}></InputCiudad>\r\n        <BotonBusqueda levantarBusqueda={props.levantarBusqueda} lugarEnBusqueda={props.lugarEnBusqueda}></BotonBusqueda>\r\n         </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Buscador;","import {useState} from \"react\";\r\nimport useFetchClimaPorCoords from \"./customHooks/useFetchClimaPorCoords\";\r\nimport useFetchClimaCiudadesPorNombre from \"./customHooks/useFetchClimaCiudadesPorNombre\";\r\nimport Contenido from \"./Contenido\";\r\nimport Buscador from \"./Buscador/Buscador\";\r\n\r\n\r\nfunction PronosticoClima() {\r\n  const [lugarEnBusqueda, setLugarEnBusqueda] = useState(null);\r\n  const [lugarBuscado, setLugarBuscado] = useState(null);\r\n  const [lugarCargando, setLugarCargando] = useState(true);\r\n\r\n  const [datosCiudad, setDatosCiudad] = useState(null);\r\n  const [coordsCiudad, setCoordsCiudad] = useState(null);\r\n  const [coordsCiudadCargando, setCoordsCiudadCargando] = useState(true);\r\n\r\n  const resultadoClimaCiudadesPorNombre = useFetchClimaCiudadesPorNombre(lugarBuscado, lugarCargando);\r\n  const resultadoClimaPorCoords = useFetchClimaPorCoords(coordsCiudad, coordsCiudadCargando);\r\n\r\n  const mensajeResultado = resultadoClimaCiudadesPorNombre.mensajeResultado;\r\n  const mensajeDeCarga = resultadoClimaCiudadesPorNombre.cargando;\r\n\r\n  const levantarDatosCiudad = (datosCiudadLevantados, coordsCiudadLevantados, coordsCiudadCargandoLevantados) =>{\r\n    setDatosCiudad(datosCiudadLevantados);\r\n    setCoordsCiudad(coordsCiudadLevantados);\r\n    setCoordsCiudadCargando(coordsCiudadCargandoLevantados);\r\n    \r\n  }\r\n\r\n  const levantarBusqueda = (lugarEnBusqueda) =>{\r\n    setLugarBuscado(lugarEnBusqueda); \r\n    setLugarCargando(false); \r\n    setCoordsCiudadCargando(true);\r\n  }\r\n\r\n  const levantarInput = (event) =>{\r\n    setLugarEnBusqueda(event.target.value); \r\n    setLugarCargando(true);\r\n  }\r\n  \r\n    return(\r\n      <div>\r\n          <Buscador \r\n            levantarInput={levantarInput} \r\n            levantarBusqueda={levantarBusqueda} \r\n            lugarEnBusqueda={lugarEnBusqueda}>\r\n          </Buscador>\r\n        <div> \r\n          {mensajeDeCarga? (\r\n            <h2 className=\"mensaje-resultado\">{mensajeResultado}</h2>\r\n          ):(   \r\n            <Contenido \r\n              climaCiudadesPorNombre={resultadoClimaCiudadesPorNombre} \r\n              datosCiudad={datosCiudad} \r\n              coordsCiudadCargando={coordsCiudadCargando} \r\n              climaPorCoords={resultadoClimaPorCoords} \r\n              levantarDatosCiudad={levantarDatosCiudad}>\r\n            </Contenido>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n\r\n}\r\n\r\nexport default PronosticoClima;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PronosticoClima from './PronosticoClima.js';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <PronosticoClima/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}